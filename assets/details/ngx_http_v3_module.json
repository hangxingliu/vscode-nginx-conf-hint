[
[4,"http3","Enables [HTTP/3](https://datatracker.ietf.org/doc/html/rfc9114) protocol negotiation.","<p>Enables <a href=\"https://datatracker.ietf.org/doc/html/rfc9114\">HTTP/3</a> protocol negotiation.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>http3</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http3 on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"http3_hq","Enables HTTP/0.9 protocol negotiation used in [QUIC interoperability tests](https://github.com/marten-seemann/quic-interop-runner).","<p>Enables HTTP/0.9 protocol negotiation used in <a href=\"https://github.com/marten-seemann/quic-interop-runner\">QUIC interoperability tests</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>http3_hq</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http3_hq off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"http3_max_concurrent_streams","Sets the maximum number of concurrent HTTP/3 request streams in a connection.","<p>Sets the maximum number of concurrent HTTP/3 request streams in a connection.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>http3_max_concurrent_streams</strong> <code>number</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http3_max_concurrent_streams 128;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"http3_stream_buffer_size","Sets the size of the buffer used for reading and writing of the QUIC streams.","<p>Sets the size of the buffer used for reading and writing of the QUIC streams.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>http3_stream_buffer_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http3_stream_buffer_size 64k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"quic_active_connection_id_limit","Sets the QUIC `active_connection_id_limit` transport parameter value. This is the maximum number of client connection IDs which can be stored on the server.","<p>Sets the QUIC <code>active_connection_id_limit</code> transport parameter value. This is the maximum number of client connection IDs which can be stored on the server.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>quic_active_connection_id_limit</strong> <code>number</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>quic_active_connection_id_limit 2;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"quic_bpf","Enables routing of QUIC packets using [eBPF](https://ebpf.io/). When enabled, this allows supporting QUIC connection migration.","<p>Enables routing of QUIC packets using <a href=\"https://ebpf.io/\">eBPF</a>. When enabled, this allows supporting QUIC connection migration.</p><blockquote class=\"note\">The directive is only supported on Linux 5.7+.</blockquote>",["The directive is only supported on Linux 5.7+."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>quic_bpf</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>quic_bpf off;</pre></td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>"],
[4,"quic_gso","Enables sending in optimized batch mode using segmentation offloading.","<p>Enables sending in optimized batch mode using segmentation offloading.</p><blockquote class=\"note\">Optimized sending is supported only on Linux featuring <code>UDP_SEGMENT</code>.</blockquote>",["Optimized sending is supported only on Linux featuring `UDP_SEGMENT`."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>quic_gso</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>quic_gso off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"quic_host_key","Sets a `file` with the secret key used to encrypt stateless reset and address validation tokens. By default, a random key is generated on each reload. Tokens generated with old keys are not accepted.","<p>Sets a <code>file</code> with the secret key used to encrypt stateless reset and address validation tokens. By default, a random key is generated on each reload. Tokens generated with old keys are not accepted.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>quic_host_key</strong> <code>file</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"quic_retry","Enables the [QUIC Address Validation](https://datatracker.ietf.org/doc/html/rfc9000#name-address-validation) feature. This includes sending a new token in a `Retry` packet or a `NEW_TOKEN` frame and validating a token received in the `Initial` packet.","<p>Enables the <a href=\"https://datatracker.ietf.org/doc/html/rfc9000#name-address-validation\">QUIC Address Validation</a> feature. This includes sending a new token in a <code>Retry</code> packet or a <code>NEW_TOKEN</code> frame and validating a token received in the <code>Initial</code> packet.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>quic_retry</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>quic_retry off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[5,"<p>The <code>ngx_http_v3_module</code> module supports the following embedded variables:</p><dl><dt id=\"var_http3\"><code>$http3</code></dt><dd>negotiated protocol identifier: “<code>h3</code>” for HTTP/3 connections, “<code>hq</code>” for hq connections, or an empty string otherwise.</dd></dl>"]
]