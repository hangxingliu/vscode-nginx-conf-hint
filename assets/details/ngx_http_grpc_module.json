[
[4,"grpc_bind","Makes outgoing connections to a gRPC server originate from the specified local IP address with an optional port. Parameter value can contain variables. The special value `off` cancels the effect of the `grpc_bind` directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.","<p>Makes outgoing connections to a gRPC server originate from the specified local IP address with an optional port. Parameter value can contain variables. The special value <code>off</code> cancels the effect of the <code>grpc_bind</code> directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_bind</strong> <code>address</code> [<code>transparent</code>] | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_buffer_size","Sets the `size` of the buffer used for reading the response received from the gRPC server. The response is passed to the client synchronously, as soon as it is received.","<p>Sets the <code>size</code> of the buffer used for reading the response received from the gRPC server. The response is passed to the client synchronously, as soon as it is received.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_buffer_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_buffer_size 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_connect_timeout","Defines a timeout for establishing a connection with a gRPC server. It should be noted that this timeout cannot usually exceed 75 seconds.","<p>Defines a timeout for establishing a connection with a gRPC server. It should be noted that this timeout cannot usually exceed 75 seconds.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_connect_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_connect_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_hide_header","By default, nginx does not pass the header fields “Date”, “Server”, and “X-Accel-...” from the response of a gRPC server to a client. The `grpc_hide_header` directive sets additional fields that will not be passed. If, on the contrary, the passing of fields needs to be permitted, the [grpc\\_pass\\_header](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass_header) directive can be used.","<p>By default, nginx does not pass the header fields “Date”, “Server”, and “X-Accel-...” from the response of a gRPC server to a client. The <code>grpc_hide_header</code> directive sets additional fields that will not be passed. If, on the contrary, the passing of fields needs to be permitted, the <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass_header\">grpc_pass_header</a> directive can be used.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_hide_header</strong> <code>field</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_ignore_headers","Disables processing of certain response header fields from the gRPC server. The following fields can be ignored: “X-Accel-Redirect” and “X-Accel-Charset”.","<p>Disables processing of certain response header fields from the gRPC server. The following fields can be ignored: “X-Accel-Redirect” and “X-Accel-Charset”.</p><p>If not disabled, processing of these header fields has the following effect:</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ignore_headers</strong> <code>field</code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_intercept_errors","Determines whether gRPC server responses with codes greater than or equal to 300 should be passed to a client or be intercepted and redirected to nginx for processing with the [error\\_page](https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page) directive.","<p>Determines whether gRPC server responses with codes greater than or equal to 300 should be passed to a client or be intercepted and redirected to nginx for processing with the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\">error_page</a> directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_intercept_errors</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_intercept_errors off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_next_upstream","Specifies in which cases a request should be passed to the next server:","<p>Specifies in which cases a request should be passed to the next server:</p><dl class=\"compact\"><dt><code>error</code></dt><dd>an error occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>timeout</code></dt><dd>a timeout has occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>invalid_header</code></dt><dd>a server returned an empty or invalid response;</dd><dt><code>http_500</code></dt><dd>a server returned a response with the code 500;</dd><dt><code>http_502</code></dt><dd>a server returned a response with the code 502;</dd><dt><code>http_503</code></dt><dd>a server returned a response with the code 503;</dd><dt><code>http_504</code></dt><dd>a server returned a response with the code 504;</dd><dt><code>http_403</code></dt><dd>a server returned a response with the code 403;</dd><dt><code>http_404</code></dt><dd>a server returned a response with the code 404;</dd><dt><code>http_429</code></dt><dd>a server returned a response with the code 429;</dd><dt id=\"non_idempotent\"><code>non_idempotent</code></dt><dd>normally, requests with a <a href=\"https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2\">non-idempotent</a> method (<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>) are not passed to the next server if a request has been sent to an upstream server; enabling this option explicitly allows retrying such requests;</dd><dt><code>off</code></dt><dd>disables passing a request to the next server.</dd></dl><p>One should bear in mind that passing a request to the next server is only possible if nothing has been sent to a client yet. That is, if an error or timeout occurs in the middle of the transferring of a response, fixing this is impossible.</p><p>The directive also defines what is considered an <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\">unsuccessful attempt</a> of communication with a server. The cases of <code>error</code>, <code>timeout</code> and <code>invalid_header</code> are always considered unsuccessful attempts, even if they are not specified in the directive. The cases of <code>http_500</code>, <code>http_502</code>, <code>http_503</code>, <code>http_504</code>, and <code>http_429</code> are considered unsuccessful attempts only if they are specified in the directive. The cases of <code>http_403</code> and <code>http_404</code> are never considered unsuccessful attempts.</p><p>Passing a request to the next server can be limited by <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream_tries\">the number of tries</a> and by <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream_timeout\">time</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_next_upstream</strong> <code>error</code> | <code>timeout</code> | <code>invalid_header</code> | <code>http_500</code> | <code>http_502</code> | <code>http_503</code> | <code>http_504</code> | <code>http_403</code> | <code>http_404</code> | <code>http_429</code> | <code>non_idempotent</code> | <code>off</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_next_upstream error timeout;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_next_upstream_timeout","Limits the time during which a request can be passed to the [next server](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream). The `0` value turns off this limitation.","<p>Limits the time during which a request can be passed to the <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_next_upstream_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_next_upstream_timeout 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_next_upstream_tries","Limits the number of possible tries for passing a request to the [next server](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream). The `0` value turns off this limitation.","<p>Limits the number of possible tries for passing a request to the <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_next_upstream_tries</strong> <code>number</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_next_upstream_tries 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_pass","Sets the gRPC server address. The address can be specified as a domain name or IP address, and a port:","<p>Sets the gRPC server address. The address can be specified as a domain name or IP address, and a port:</p><blockquote class=\"example\"><pre>grpc_pass localhost:9000;\n</pre></blockquote><p>or as a UNIX-domain socket path:</p><blockquote class=\"example\"><pre>grpc_pass unix:/tmp/grpc.socket;\n</pre></blockquote><p>Alternatively, the “<code>grpc://</code>” scheme can be used:</p><blockquote class=\"example\"><pre>grpc_pass grpc://127.0.0.1:9000;\n</pre></blockquote><p>To use gRPC over SSL, the “<code>grpcs://</code>” scheme should be used:</p><blockquote class=\"example\"><pre>grpc_pass grpcs://127.0.0.1:443;\n</pre></blockquote><p>If a domain name resolves to several addresses, all of them will be used in a round-robin fashion. In addition, an address can be specified as a <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\">server group</a>.</p><p>Parameter value can contain variables (1.17.8). In this case, if an address is specified as a domain name, the name is searched among the described <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\">server groups</a>, and, if not found, is determined using a <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\">resolver</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_pass</strong> <code>address</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code>, <code>if in location</code><br></td></tr></tbody></table>"],
[4,"grpc_pass_header","Permits passing [otherwise disabled](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_hide_header) header fields from a gRPC server to a client.","<p>Permits passing <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_hide_header\">otherwise disabled</a> header fields from a gRPC server to a client.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_pass_header</strong> <code>field</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_read_timeout","Defines a timeout for reading a response from the gRPC server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the gRPC server does not transmit anything within this time, the connection is closed.","<p>Defines a timeout for reading a response from the gRPC server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the gRPC server does not transmit anything within this time, the connection is closed.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_read_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_read_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_send_timeout","Sets a timeout for transmitting a request to the gRPC server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the gRPC server does not receive anything within this time, the connection is closed.","<p>Sets a timeout for transmitting a request to the gRPC server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the gRPC server does not receive anything within this time, the connection is closed.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_send_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_send_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_set_header","Allows redefining or appending fields to the request header [passed](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass_request_headers) to the gRPC server. The `value` can contain text, variables, and their combinations. These directives are inherited from the previous configuration level if and only if there are no `grpc_set_header` directives defined on the current level.","<p>Allows redefining or appending fields to the request header <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass_request_headers\">passed</a> to the gRPC server. The <code>value</code> can contain text, variables, and their combinations. These directives are inherited from the previous configuration level if and only if there are no <code>grpc_set_header</code> directives defined on the current level.</p><p>If the value of a header field is an empty string then this field will not be passed to a gRPC server:</p><blockquote class=\"example\"><pre>grpc_set_header Accept-Encoding \"\";\n</pre></blockquote>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_set_header</strong> <code>field</code> <code>value</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_set_header Content-Length $content_length;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_socket_keepalive","Configures the “TCP keepalive” behavior for outgoing connections to a gRPC server. By default, the operating system’s settings are in effect for the socket. If the directive is set to the value “`on`”, the `SO_KEEPALIVE` socket option is turned on for the socket.","<p>Configures the “TCP keepalive” behavior for outgoing connections to a gRPC server. By default, the operating system’s settings are in effect for the socket. If the directive is set to the value “<code>on</code>”, the <code>SO_KEEPALIVE</code> socket option is turned on for the socket.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_socket_keepalive</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_socket_keepalive off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.6.</p>"],
[4,"grpc_ssl_certificate","Specifies a `file` with the certificate in the PEM format used for authentication to a gRPC SSL server.","<p>Specifies a <code>file</code> with the certificate in the PEM format used for authentication to a gRPC SSL server.</p><p>Since version 1.21.0, variables can be used in the <code>file</code> name.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_certificate</strong> <code>file</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_ssl_certificate_key","Specifies a `file` with the secret key in the PEM format used for authentication to a gRPC SSL server.","<p>Specifies a <code>file</code> with the secret key in the PEM format used for authentication to a gRPC SSL server.</p><p>The value <code>engine</code>:<code>name</code>:<code>id</code> can be specified instead of the <code>file</code>, which loads a secret key with a specified <code>id</code> from the OpenSSL engine <code>name</code>.</p><p>Since version 1.21.0, variables can be used in the <code>file</code> name.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_certificate_key</strong> <code>file</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_ssl_ciphers","Specifies the enabled ciphers for requests to a gRPC SSL server. The ciphers are specified in the format understood by the OpenSSL library.","<p>Specifies the enabled ciphers for requests to a gRPC SSL server. The ciphers are specified in the format understood by the OpenSSL library.</p><p>The full list can be viewed using the “<code>openssl ciphers</code>” command.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_ciphers</strong> <code>ciphers</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_ssl_ciphers DEFAULT;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_ssl_conf_command","Sets arbitrary OpenSSL configuration [commands](https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html) when establishing a connection with the gRPC SSL server.","<p>Sets arbitrary OpenSSL configuration <a href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\">commands</a> when establishing a connection with the gRPC SSL server.</p><blockquote class=\"note\">The directive is supported when using OpenSSL 1.0.2 or higher.</blockquote><p>Several <code>grpc_ssl_conf_command</code> directives can be specified on the same level. These directives are inherited from the previous configuration level if and only if there are no <code>grpc_ssl_conf_command</code> directives defined on the current level.</p><blockquote class=\"note\">Note that configuring OpenSSL directly might result in unexpected behavior.</blockquote>",["The directive is supported when using OpenSSL 1.0.2 or higher.","Note that configuring OpenSSL directly might result in unexpected behavior."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_conf_command</strong> <code>name</code> <code>value</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.4.</p>"],
[4,"grpc_ssl_crl","Specifies a `file` with revoked certificates (CRL) in the PEM format used to [verify](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify) the certificate of the gRPC SSL server.","<p>Specifies a <code>file</code> with revoked certificates (CRL) in the PEM format used to <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify\">verify</a> the certificate of the gRPC SSL server.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_crl</strong> <code>file</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_ssl_name","Allows overriding the server name used to [verify](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify) the certificate of the gRPC SSL server and to be [passed through SNI](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_server_name) when establishing a connection with the gRPC SSL server.","<p>Allows overriding the server name used to <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify\">verify</a> the certificate of the gRPC SSL server and to be <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_server_name\">passed through SNI</a> when establishing a connection with the gRPC SSL server.</p><p>By default, the host part from <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass\">grpc_pass</a> is used.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_name</strong> <code>name</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_ssl_name host from grpc_pass;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_ssl_password_file","Specifies a `file` with passphrases for [secret keys](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_certificate_key) where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.","<p>Specifies a <code>file</code> with passphrases for <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_certificate_key\">secret keys</a> where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_password_file</strong> <code>file</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_ssl_protocols","Enables the specified protocols for requests to a gRPC SSL server.","<p>Enables the specified protocols for requests to a gRPC SSL server.</p><blockquote class=\"note\">The <code>TLSv1.3</code> parameter is used by default since 1.23.4.</blockquote>",["The `TLSv1.3` parameter is used by default since 1.23.4."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_protocols</strong> [<code>SSLv2</code>] [<code>SSLv3</code>] [<code>TLSv1</code>] [<code>TLSv1.1</code>] [<code>TLSv1.2</code>] [<code>TLSv1.3</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_ssl_server_name","Enables or disables passing of the server name through [TLS Server Name Indication extension](http://en.wikipedia.org/wiki/Server_Name_Indication) (SNI, RFC 6066) when establishing a connection with the gRPC SSL server.","<p>Enables or disables passing of the server name through <a href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\">TLS Server Name Indication extension</a> (SNI, RFC 6066) when establishing a connection with the gRPC SSL server.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_server_name</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_ssl_server_name off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_ssl_session_reuse","Determines whether SSL sessions can be reused when working with the gRPC server. If the errors “`SSL3_GET_FINISHED:digest check failed`” appear in the logs, try disabling session reuse.","<p>Determines whether SSL sessions can be reused when working with the gRPC server. If the errors “<code>SSL3_GET_FINISHED:digest check failed</code>” appear in the logs, try disabling session reuse.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_session_reuse</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_ssl_session_reuse on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_ssl_trusted_certificate","Specifies a `file` with trusted CA certificates in the PEM format used to [verify](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify) the certificate of the gRPC SSL server.","<p>Specifies a <code>file</code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify\">verify</a> the certificate of the gRPC SSL server.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_trusted_certificate</strong> <code>file</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_ssl_verify","Enables or disables verification of the gRPC SSL server certificate.","<p>Enables or disables verification of the gRPC SSL server certificate.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_verify</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_ssl_verify off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"grpc_ssl_verify_depth","Sets the verification depth in the gRPC SSL server certificates chain.","<p>Sets the verification depth in the gRPC SSL server certificates chain.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_verify_depth</strong> <code>number</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_ssl_verify_depth 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"]
]