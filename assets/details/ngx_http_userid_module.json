[
[4,"userid","Enables or disables setting cookies and logging the received cookies:","<p>Enables or disables setting cookies and logging the received cookies:</p><dl class=\"compact\"><dt><code>on</code></dt><dd>enables the setting of version 2 cookies and logging of the received cookies;</dd><dt><code>v1</code></dt><dd>enables the setting of version 1 cookies and logging of the received cookies;</dd><dt><code>log</code></dt><dd>disables the setting of cookies, but enables logging of the received cookies;</dd><dt><code>off</code></dt><dd>disables the setting of cookies and logging of the received cookies.</dd></dl>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid</strong> <code>on</code> | <code>v1</code> | <code>log</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"userid_domain","Defines a domain for which the cookie is set. The `none` parameter disables setting of a domain for the cookie.","<p>Defines a domain for which the cookie is set. The <code>none</code> parameter disables setting of a domain for the cookie.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_domain</strong> <code>name</code> | <code>none</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_domain none;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"userid_expires","Sets a time during which a browser should keep the cookie. The parameter `max` will cause the cookie to expire on “`31 Dec 2037 23:55:55 GMT`”. The parameter `off` will cause the cookie to expire at the end of a browser session.","<p>Sets a time during which a browser should keep the cookie. The parameter <code>max</code> will cause the cookie to expire on “<code>31 Dec 2037 23:55:55 GMT</code>”. The parameter <code>off</code> will cause the cookie to expire at the end of a browser session.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_expires</strong> <code>time</code> | <code>max</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_expires off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"userid_flags","If the parameter is not `off`, defines one or more additional flags for the cookie: `secure`, `httponly`, `samesite=strict`, `samesite=lax`, `samesite=none`.","<p>If the parameter is not <code>off</code>, defines one or more additional flags for the cookie: <code>secure</code>, <code>httponly</code>, <code>samesite=strict</code>, <code>samesite=lax</code>, <code>samesite=none</code>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_flags</strong> <code>off</code> | <code>flag</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_flags off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.3.</p>"],
[4,"userid_mark","If the parameter is not `off`, enables the cookie marking mechanism and sets the character used as a mark. This mechanism is used to add or change [userid\\_p3p](https://nginx.org/en/docs/http/ngx_http_userid_module.html#userid_p3p) and/or a cookie expiration time while preserving the client identifier. A mark can be any letter of the English alphabet (case-sensitive), digit, or the “`=`” character.","<p>If the parameter is not <code>off</code>, enables the cookie marking mechanism and sets the character used as a mark. This mechanism is used to add or change <a href=\"https://nginx.org/en/docs/http/ngx_http_userid_module.html#userid_p3p\">userid_p3p</a> and/or a cookie expiration time while preserving the client identifier. A mark can be any letter of the English alphabet (case-sensitive), digit, or the “<code>=</code>” character.</p><p>If the mark is set, it is compared with the first padding symbol in the base64 representation of the client identifier passed in a cookie. If they do not match, the cookie is resent with the specified mark, expiration time, and “P3P” header.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_mark</strong> <code>letter</code> | <code>digit</code> | <code>=</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_mark off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"userid_name","Sets the cookie name.","<p>Sets the cookie name.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_name</strong> <code>name</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_name uid;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"userid_p3p","Sets a value for the “P3P” header field that will be sent along with the cookie. If the directive is set to the special value `none`, the “P3P” header will not be sent in a response.","<p>Sets a value for the “P3P” header field that will be sent along with the cookie. If the directive is set to the special value <code>none</code>, the “P3P” header will not be sent in a response.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_p3p</strong> <code>string</code> | <code>none</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_p3p none;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"userid_path","Defines a path for which the cookie is set.","<p>Defines a path for which the cookie is set.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_path</strong> <code>path</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_path /;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"userid_service","If identifiers are issued by multiple servers (services), each service should be assigned its own `number` to ensure that client identifiers are unique. For version 1 cookies, the default value is zero. For version 2 cookies, the default value is the number composed from the last four octets of the server’s IP address.","<p>If identifiers are issued by multiple servers (services), each service should be assigned its own <code>number</code> to ensure that client identifiers are unique. For version 1 cookies, the default value is zero. For version 2 cookies, the default value is the number composed from the last four octets of the server’s IP address.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_service</strong> <code>number</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_service IP address of the server;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[5,"<p>The <code>ngx_http_userid_module</code> module supports the following embedded variables:</p><dl class=\"compact\"><dt id=\"var_uid_got\"><code>$uid_got</code></dt><dd>The cookie name and received client identifier.</dd><dt id=\"var_uid_reset\"><code>$uid_reset</code></dt><dd>If the variable is set to a non-empty string that is not “<code>0</code>”, the client identifiers are reset. The special value “<code>log</code>” additionally leads to the output of messages about the reset identifiers to the <a href=\"https://nginx.org/en/docs/ngx_core_module.html#error_log\">error_log</a>.</dd><dt id=\"var_uid_set\"><code>$uid_set</code></dt><dd>The cookie name and sent client identifier.</dd></dl>"]
]