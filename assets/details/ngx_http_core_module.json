[
[4,"absolute_redirect","If disabled, redirects issued by nginx will be relative.","<p>If disabled, redirects issued by nginx will be relative.</p><p>See also <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name_in_redirect\">server_name_in_redirect</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#port_in_redirect\">port_in_redirect</a> directives.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>absolute_redirect</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>absolute_redirect on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.8.</p>"],
[4,"aio","Enables or disables the use of asynchronous file I/O (AIO) on FreeBSD and Linux:","<p>Enables or disables the use of asynchronous file I/O (AIO) on FreeBSD and Linux:</p><blockquote class=\"example\"><pre>location /video/ {\n    aio            on;\n    output_buffers 1 64k;\n}\n</pre></blockquote><p>On FreeBSD, AIO can be used starting from FreeBSD&nbsp;4.3. Prior to FreeBSD&nbsp;11.0, AIO can either be linked statically into a kernel:</p><blockquote class=\"example\"><pre>options VFS_AIO\n</pre></blockquote><p>or loaded dynamically as a kernel loadable module:</p><blockquote class=\"example\"><pre>kldload aio\n</pre></blockquote><p>On Linux, AIO can be used starting from kernel version 2.6.22. Also, it is necessary to enable <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\">directio</a>, or otherwise reading will be blocking:</p><blockquote class=\"example\"><pre>location /video/ {\n    aio            on;\n    directio       512;\n    output_buffers 1 128k;\n}\n</pre></blockquote><p>On Linux, <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\">directio</a> can only be used for reading blocks that are aligned on 512-byte boundaries (or 4K for XFS). File’s unaligned end is read in blocking mode. The same holds true for byte range requests and for FLV requests not from the beginning of a file: reading of unaligned data at the beginning and end of a file will be blocking.</p><p>When both AIO and <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\">sendfile</a> are enabled on Linux, AIO is used for files that are larger than or equal to the size specified in the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\">directio</a> directive, while <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\">sendfile</a> is used for files of smaller sizes or when <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\">directio</a> is disabled.</p><blockquote class=\"example\"><pre>location /video/ {\n    sendfile       on;\n    aio            on;\n    directio       8m;\n}\n</pre></blockquote><p>Finally, files can be read and <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\">sent</a> using multi-threading (1.7.11), without blocking a worker process:</p><blockquote class=\"example\"><pre>location /video/ {\n    sendfile       on;\n    aio            threads;\n}\n</pre></blockquote><p>Read and send file operations are offloaded to threads of the specified <a href=\"https://nginx.org/en/docs/ngx_core_module.html#thread_pool\">pool</a>. If the pool name is omitted, the pool with the name “<code>default</code>” is used. The pool name can also be set with variables:</p><blockquote class=\"example\"><pre>aio threads=pool$disk;\n</pre></blockquote><p>By default, multi-threading is disabled, it should be enabled with the <code>--with-threads</code> configuration parameter. Currently, multi-threading is compatible only with the <a href=\"https://nginx.org/en/docs/events.html#epoll\">epoll</a>, <a href=\"https://nginx.org/en/docs/events.html#kqueue\">kqueue</a>, and <a href=\"https://nginx.org/en/docs/events.html#eventport\">eventport</a> methods. Multi-threaded sending of files is only supported on Linux.</p><p>See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\">sendfile</a> directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>aio</strong> <code>on</code> | <code>off</code> | <code>threads</code>[<code>=</code><code>pool</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>aio off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.11.</p>"],
[4,"aio_write","If [aio](https://nginx.org/en/docs/http/ngx_http_core_module.html#aio) is enabled, specifies whether it is used for writing files. Currently, this only works when using `aio threads` and is limited to writing temporary files with data received from proxied servers.","<p>If <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#aio\">aio</a> is enabled, specifies whether it is used for writing files. Currently, this only works when using <code>aio threads</code> and is limited to writing temporary files with data received from proxied servers.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>aio_write</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>aio_write off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.13.</p>"],
[4,"alias","Defines a replacement for the specified location. For example, with the following configuration","<p>Defines a replacement for the specified location. For example, with the following configuration</p><blockquote class=\"example\"><pre>location /i/ {\n    alias /data/w3/images/;\n}\n</pre></blockquote><p>on request of “<code>/i/top.gif</code>”, the file <code>/data/w3/images/top.gif</code> will be sent.</p><p>The <code>path</code> value can contain variables, except <code>$document_root</code> and <code>$realpath_root</code>.</p><p>If <code>alias</code> is used inside a location defined with a regular expression then such regular expression should contain captures and <code>alias</code> should refer to these captures (0.7.40), for example:</p><blockquote class=\"example\"><pre>location ~ ^/users/(.+\\.(?:gif|jpe?g|png))$ {\n    alias /data/w3/images/$1;\n}\n</pre></blockquote><p>When location matches the last part of the directive’s value:</p><blockquote class=\"example\"><pre>location /images/ {\n    alias /data/w3/images/;\n}\n</pre></blockquote><p>it is better to use the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\">root</a> directive instead:</p><blockquote class=\"example\"><pre>location /images/ {\n    root /data/w3;\n}\n</pre></blockquote>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>alias</strong> <code>path</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>"],
[4,"auth_delay","Delays processing of unauthorized requests with 401 response code to prevent timing attacks when access is limited by [password](https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html), by the [result of subrequest](https://nginx.org/en/docs/http/ngx_http_auth_request_module.html), or by [JWT](https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html).","<p>Delays processing of unauthorized requests with 401 response code to prevent timing attacks when access is limited by <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html\">password</a>, by the <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_request_module.html\">result of subrequest</a>, or by <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html\">JWT</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_delay</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>auth_delay 0s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.17.10.</p>"],
[4,"chunked_transfer_encoding","Allows disabling chunked transfer encoding in HTTP/1.1. It may come in handy when using a software failing to support chunked encoding despite the standard’s requirement.","<p>Allows disabling chunked transfer encoding in HTTP/1.1. It may come in handy when using a software failing to support chunked encoding despite the standard’s requirement.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>chunked_transfer_encoding</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>chunked_transfer_encoding on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"client_body_buffer_size","Sets buffer size for reading client request body. In case the request body is larger than the buffer, the whole body or only its part is written to a [temporary file](https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_temp_path). By default, buffer size is equal to two memory pages. This is 8K on x86, other 32-bit platforms, and x86-64. It is usually 16K on other 64-bit platforms.","<p>Sets buffer size for reading client request body. In case the request body is larger than the buffer, the whole body or only its part is written to a <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_temp_path\">temporary file</a>. By default, buffer size is equal to two memory pages. This is 8K on x86, other 32-bit platforms, and x86-64. It is usually 16K on other 64-bit platforms.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_body_buffer_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>client_body_buffer_size 8k|16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"client_body_in_file_only","Determines whether nginx should save the entire client request body into a file. This directive can be used during debugging, or when using the `$request_body_file` variable, or the [$r->request\\_body\\_file](https://nginx.org/en/docs/http/ngx_http_perl_module.html#methods) method of the module [ngx\\_http\\_perl\\_module](https://nginx.org/en/docs/http/ngx_http_perl_module.html).","<p>Determines whether nginx should save the entire client request body into a file. This directive can be used during debugging, or when using the <code>$request_body_file</code> variable, or the <a href=\"https://nginx.org/en/docs/http/ngx_http_perl_module.html#methods\">$r-&gt;request_body_file</a> method of the module <a href=\"https://nginx.org/en/docs/http/ngx_http_perl_module.html\">ngx_http_perl_module</a>.</p><p>When set to the value <code>on</code>, temporary files are not removed after request processing.</p><p>The value <code>clean</code> will cause the temporary files left after request processing to be removed.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_body_in_file_only</strong> <code>on</code> | <code>clean</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>client_body_in_file_only off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"client_body_in_single_buffer","Determines whether nginx should save the entire client request body in a single buffer. The directive is recommended when using the `$request_body` variable, to save the number of copy operations involved.","<p>Determines whether nginx should save the entire client request body in a single buffer. The directive is recommended when using the <code>$request_body</code> variable, to save the number of copy operations involved.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_body_in_single_buffer</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>client_body_in_single_buffer off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"client_body_temp_path","Defines a directory for storing temporary files holding client request bodies. Up to three-level subdirectory hierarchy can be used under the specified directory. For example, in the following configuration","<p>Defines a directory for storing temporary files holding client request bodies. Up to three-level subdirectory hierarchy can be used under the specified directory. For example, in the following configuration</p><blockquote class=\"example\"><pre>client_body_temp_path /spool/nginx/client_temp 1 2;\n</pre></blockquote><p>a path to a temporary file might look like this:</p><blockquote class=\"example\"><pre>/spool/nginx/client_temp/7/45/00000123457\n</pre></blockquote>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_body_temp_path</strong> <code>path</code> [<code>level1</code> [<code>level2</code> [<code>level3</code>]]];</code><br></td></tr><tr><th>Default:</th><td><pre>client_body_temp_path client_body_temp;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"client_body_timeout","Defines a timeout for reading client request body. The timeout is set only for a period between two successive read operations, not for the transmission of the whole request body. If a client does not transmit anything within this time, the request is terminated with the 408 (Request Time-out) error.","<p>Defines a timeout for reading client request body. The timeout is set only for a period between two successive read operations, not for the transmission of the whole request body. If a client does not transmit anything within this time, the request is terminated with the 408 (Request Time-out) error.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_body_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>client_body_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"client_header_buffer_size","Sets buffer size for reading client request header. For most requests, a buffer of 1K bytes is enough. However, if a request includes long cookies, or comes from a WAP client, it may not fit into 1K. If a request line or a request header field does not fit into this buffer then larger buffers, configured by the [large\\_client\\_header\\_buffers](https://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers) directive, are allocated.","<p>Sets buffer size for reading client request header. For most requests, a buffer of 1K bytes is enough. However, if a request includes long cookies, or comes from a WAP client, it may not fit into 1K. If a request line or a request header field does not fit into this buffer then larger buffers, configured by the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers\">large_client_header_buffers</a> directive, are allocated.</p><p>If the directive is specified on the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">server</a> level, the value from the default server can be used. Details are provided in the “<a href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\">Virtual server selection</a>” section.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_header_buffer_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>client_header_buffer_size 1k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"client_header_timeout","Defines a timeout for reading client request header. If a client does not transmit the entire header within this time, the request is terminated with the 408 (Request Time-out) error.","<p>Defines a timeout for reading client request header. If a client does not transmit the entire header within this time, the request is terminated with the 408 (Request Time-out) error.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_header_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>client_header_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"client_max_body_size","Sets the maximum allowed size of the client request body. If the size in a request exceeds the configured value, the 413 (Request Entity Too Large) error is returned to the client. Please be aware that browsers cannot correctly display this error. Setting `size` to 0 disables checking of client request body size.","<p>Sets the maximum allowed size of the client request body. If the size in a request exceeds the configured value, the 413 (Request Entity Too Large) error is returned to the client. Please be aware that browsers cannot correctly display this error. Setting <code>size</code> to 0 disables checking of client request body size.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_max_body_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>client_max_body_size 1m;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"connection_pool_size","Allows accurate tuning of per-connection memory allocations. This directive has minimal impact on performance and should not generally be used. By default, the size is equal to 256 bytes on 32-bit platforms and 512 bytes on 64-bit platforms.","<p>Allows accurate tuning of per-connection memory allocations. This directive has minimal impact on performance and should not generally be used. By default, the size is equal to 256 bytes on 32-bit platforms and 512 bytes on 64-bit platforms.</p><blockquote class=\"note\">Prior to version 1.9.8, the default value was 256 on all platforms.</blockquote>",["Prior to version 1.9.8, the default value was 256 on all platforms."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>connection_pool_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>connection_pool_size 256|512;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"default_type","Defines the default MIME type of a response. Mapping of file name extensions to MIME types can be set with the [types](https://nginx.org/en/docs/http/ngx_http_core_module.html#types) directive.","<p>Defines the default MIME type of a response. Mapping of file name extensions to MIME types can be set with the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#types\">types</a> directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>default_type</strong> <code>mime-type</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>default_type text/plain;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"directio","Enables the use of the `O_DIRECT` flag (FreeBSD, Linux), the `F_NOCACHE` flag (macOS), or the `directio()` function (Solaris), when reading files that are larger than or equal to the specified `size`. The directive automatically disables (0.7.15) the use of [sendfile](https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile) for a given request. It can be useful for serving large files:","<p>Enables the use of the <code>O_DIRECT</code> flag (FreeBSD, Linux), the <code>F_NOCACHE</code> flag (macOS), or the <code>directio()</code> function (Solaris), when reading files that are larger than or equal to the specified <code>size</code>. The directive automatically disables (0.7.15) the use of <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\">sendfile</a> for a given request. It can be useful for serving large files:</p><blockquote class=\"example\"><pre>directio 4m;\n</pre></blockquote><p>or when using <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#aio\">aio</a> on Linux.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>directio</strong> <code>size</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>directio off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.7.</p>"],
[4,"directio_alignment","Sets the alignment for [directio](https://nginx.org/en/docs/http/ngx_http_core_module.html#directio). In most cases, a 512-byte alignment is enough. However, when using XFS under Linux, it needs to be increased to 4K.","<p>Sets the alignment for <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\">directio</a>. In most cases, a 512-byte alignment is enough. However, when using XFS under Linux, it needs to be increased to 4K.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>directio_alignment</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>directio_alignment 512;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.11.</p>"],
[4,"disable_symlinks","Determines how symbolic links should be treated when opening files:","<p>Determines how symbolic links should be treated when opening files:</p><dl class=\"compact\"><dt><code>off</code></dt><dd>Symbolic links in the pathname are allowed and not checked. This is the default behavior.</dd><dt><code>on</code></dt><dd>If any component of the pathname is a symbolic link, access to a file is denied.</dd><dt><code>if_not_owner</code></dt><dd>Access to a file is denied if any component of the pathname is a symbolic link, and the link and object that the link points to have different owners.</dd><dt><code>from</code>=<code>part</code></dt><dd>When checking symbolic links (parameters <code>on</code> and <code>if_not_owner</code>), all components of the pathname are normally checked. Checking of symbolic links in the initial part of the pathname may be avoided by specifying additionally the <code>from</code>=<code>part</code> parameter. In this case, symbolic links are checked only from the pathname component that follows the specified initial part. If the value is not an initial part of the pathname checked, the whole pathname is checked as if this parameter was not specified at all. If the value matches the whole file name, symbolic links are not checked. The parameter value can contain variables.</dd></dl><p>Example:</p><blockquote class=\"example\"><pre>disable_symlinks on from=$document_root;\n</pre></blockquote><p>This directive is only available on systems that have the <code>openat()</code> and <code>fstatat()</code> interfaces. Such systems include modern versions of FreeBSD, Linux, and Solaris.</p><p>Parameters <code>on</code> and <code>if_not_owner</code> add a processing overhead.</p><blockquote class=\"note\">On systems that do not support opening of directories only for search, to use these parameters it is required that worker processes have read permissions for all directories being checked.</blockquote><blockquote class=\"note\">The <a href=\"https://nginx.org/en/docs/http/ngx_http_autoindex_module.html\">ngx_http_autoindex_module</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_random_index_module.html\">ngx_http_random_index_module</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_dav_module.html\">ngx_http_dav_module</a> modules currently ignore this directive.</blockquote>",["On systems that do not support opening of directories only for search, to use these parameters it is required that worker processes have read permissions for all directories being checked.","The [ngx\\_http\\_autoindex\\_module](https://nginx.org/en/docs/http/ngx_http_autoindex_module.html), [ngx\\_http\\_random\\_index\\_module](https://nginx.org/en/docs/http/ngx_http_random_index_module.html), and [ngx\\_http\\_dav\\_module](https://nginx.org/en/docs/http/ngx_http_dav_module.html) modules currently ignore this directive."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>disable_symlinks</strong> <code>off</code>;</code><br><code><strong>disable_symlinks</strong> <code>on</code> | <code>if_not_owner</code> [<code>from</code>=<code>part</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>disable_symlinks off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.15.</p>"],
[4,"error_page","Defines the URI that will be shown for the specified errors. A `uri` value can contain variables.","<p>Defines the URI that will be shown for the specified errors. A <code>uri</code> value can contain variables.</p><p>Example:</p><blockquote class=\"example\"><pre>error_page 404             /404.html;\nerror_page 500 502 503 504 /50x.html;\n</pre></blockquote><p>This causes an internal redirect to the specified <code>uri</code> with the client request method changed to “<code>GET</code>” (for all methods other than “<code>GET</code>” and “<code>HEAD</code>”).</p><p>Furthermore, it is possible to change the response code to another using the “<code>=</code><code>response</code>” syntax, for example:</p><blockquote class=\"example\"><pre>error_page 404 =200 /empty.gif;\n</pre></blockquote><p>If an error response is processed by a proxied server or a FastCGI/uwsgi/SCGI/gRPC server, and the server may return different response codes (e.g., 200, 302, 401 or 404), it is possible to respond with the code it returns:</p><blockquote class=\"example\"><pre>error_page 404 = /404.php;\n</pre></blockquote><p>If there is no need to change URI and method during internal redirection it is possible to pass error processing into a named location:</p><blockquote class=\"example\"><pre>location / {\n    error_page 404 = @fallback;\n}\n\nlocation @fallback {\n    proxy_pass http://backend;\n}\n</pre></blockquote><blockquote class=\"note\">If <code>uri</code> processing leads to an error, the status code of the last occurred error is returned to the client.</blockquote><p>It is also possible to use URL redirects for error processing:</p><blockquote class=\"example\"><pre>error_page 403      http://example.com/forbidden.html;\nerror_page 404 =301 http://example.com/notfound.html;\n</pre></blockquote><p>In this case, by default, the response code 302 is returned to the client. It can only be changed to one of the redirect status codes (301, 302, 303, 307, and 308).</p><blockquote class=\"note\">The code 307 was not treated as a redirect until versions 1.1.16 and 1.0.13.</blockquote><blockquote class=\"note\">The code 308 was not treated as a redirect until version 1.13.0.</blockquote><p>These directives are inherited from the previous configuration level if and only if there are no <code>error_page</code> directives defined on the current level.</p>",["If `uri` processing leads to an error, the status code of the last occurred error is returned to the client.","The code 307 was not treated as a redirect until versions 1.1.16 and 1.0.13.","The code 308 was not treated as a redirect until version 1.13.0."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>error_page</strong> <code>code</code> ... [<code>=</code>[<code>response</code>]] <code>uri</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>"],
[4,"etag","Enables or disables automatic generation of the “ETag” response header field for static resources.","<p>Enables or disables automatic generation of the “ETag” response header field for static resources.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>etag</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>etag on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.3.3.</p>"],
[4,"http","Provides the configuration file context in which the HTTP server directives are specified.","<p>Provides the configuration file context in which the HTTP server directives are specified.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>http</strong> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>"],
[4,"if_modified_since","Specifies how to compare modification time of a response with the time in the “If-Modified-Since” request header field:","<p>Specifies how to compare modification time of a response with the time in the “If-Modified-Since” request header field:</p><dl class=\"compact\"><dt><code>off</code></dt><dd>the response is always considered modified (0.7.34);</dd><dt><code>exact</code></dt><dd>exact match;</dd><dt><code>before</code></dt><dd>modification time of the response is less than or equal to the time in the “If-Modified-Since” request header field.</dd></dl>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>if_modified_since</strong> <code>off</code> | <code>exact</code> | <code>before</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>if_modified_since exact;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.24.</p>"],
[4,"ignore_invalid_headers","Controls whether header fields with invalid names should be ignored. Valid names are composed of English letters, digits, hyphens, and possibly underscores (as controlled by the [underscores\\_in\\_headers](https://nginx.org/en/docs/http/ngx_http_core_module.html#underscores_in_headers) directive).","<p>Controls whether header fields with invalid names should be ignored. Valid names are composed of English letters, digits, hyphens, and possibly underscores (as controlled by the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#underscores_in_headers\">underscores_in_headers</a> directive).</p><p>If the directive is specified on the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">server</a> level, the value from the default server can be used. Details are provided in the “<a href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\">Virtual server selection</a>” section.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>ignore_invalid_headers</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ignore_invalid_headers on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"internal","Specifies that a given location can only be used for internal requests. For external requests, the client error 404 (Not Found) is returned. Internal requests are the following:","<p>Specifies that a given location can only be used for internal requests. For external requests, the client error 404 (Not Found) is returned. Internal requests are the following:</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>internal</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>"],
[4,"keepalive_disable","Disables keep-alive connections with misbehaving browsers. The `browser` parameters specify which browsers will be affected. The value `msie6` disables keep-alive connections with old versions of MSIE, once a POST request is received. The value `safari` disables keep-alive connections with Safari and Safari-like browsers on macOS and macOS-like operating systems. The value `none` enables keep-alive connections with all browsers.","<p>Disables keep-alive connections with misbehaving browsers. The <code>browser</code> parameters specify which browsers will be affected. The value <code>msie6</code> disables keep-alive connections with old versions of MSIE, once a POST request is received. The value <code>safari</code> disables keep-alive connections with Safari and Safari-like browsers on macOS and macOS-like operating systems. The value <code>none</code> enables keep-alive connections with all browsers.</p><blockquote class=\"note\">Prior to version 1.1.18, the value <code>safari</code> matched all Safari and Safari-like browsers on all operating systems, and keep-alive connections with them were disabled by default.</blockquote>",["Prior to version 1.1.18, the value `safari` matched all Safari and Safari-like browsers on all operating systems, and keep-alive connections with them were disabled by default."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>keepalive_disable</strong> <code>none</code> | <code>browser</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>keepalive_disable msie6;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"keepalive_requests","Sets the maximum number of requests that can be served through one keep-alive connection. After the maximum number of requests are made, the connection is closed.","<p>Sets the maximum number of requests that can be served through one keep-alive connection. After the maximum number of requests are made, the connection is closed.</p><p>Closing connections periodically is necessary to free per-connection memory allocations. Therefore, using too high maximum number of requests could result in excessive memory usage and not recommended.</p><blockquote class=\"note\">Prior to version 1.19.10, the default value was 100.</blockquote>",["Prior to version 1.19.10, the default value was 100."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>keepalive_requests</strong> <code>number</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>keepalive_requests 1000;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.0.</p>"],
[4,"keepalive_time","Limits the maximum time during which requests can be processed through one keep-alive connection. After this time is reached, the connection is closed following the subsequent request processing.","<p>Limits the maximum time during which requests can be processed through one keep-alive connection. After this time is reached, the connection is closed following the subsequent request processing.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>keepalive_time</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>keepalive_time 1h;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.10.</p>"],
[4,"keepalive_timeout","The first parameter sets a timeout during which a keep-alive client connection will stay open on the server side. The zero value disables keep-alive client connections. The optional second parameter sets a value in the “Keep-Alive: timeout=`time`” response header field. Two parameters may differ.","<p>The first parameter sets a timeout during which a keep-alive client connection will stay open on the server side. The zero value disables keep-alive client connections. The optional second parameter sets a value in the “Keep-Alive: timeout=<code>time</code>” response header field. Two parameters may differ.</p><p>The “Keep-Alive: timeout=<code>time</code>” header field is recognized by Mozilla and Konqueror. MSIE closes keep-alive connections by itself in about 60 seconds.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>keepalive_timeout</strong> <code>timeout</code> [<code>header_timeout</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>keepalive_timeout 75s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"large_client_header_buffers","Sets the maximum `number` and `size` of buffers used for reading large client request header. A request line cannot exceed the size of one buffer, or the 414 (Request-URI Too Large) error is returned to the client. A request header field cannot exceed the size of one buffer as well, or the 400 (Bad Request) error is returned to the client. Buffers are allocated only on demand. By default, the buffer size is equal to 8K bytes. If after the end of request processing a connection is transitioned into the keep-alive state, these buffers are released.","<p>Sets the maximum <code>number</code> and <code>size</code> of buffers used for reading large client request header. A request line cannot exceed the size of one buffer, or the 414 (Request-URI Too Large) error is returned to the client. A request header field cannot exceed the size of one buffer as well, or the 400 (Bad Request) error is returned to the client. Buffers are allocated only on demand. By default, the buffer size is equal to 8K bytes. If after the end of request processing a connection is transitioned into the keep-alive state, these buffers are released.</p><p>If the directive is specified on the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">server</a> level, the value from the default server can be used. Details are provided in the “<a href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\">Virtual server selection</a>” section.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>large_client_header_buffers</strong> <code>number</code> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>large_client_header_buffers 4 8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"limit_except","Limits allowed HTTP methods inside a location. The `method` parameter can be one of the following: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `MKCOL`, `COPY`, `MOVE`, `OPTIONS`, `PROPFIND`, `PROPPATCH`, `LOCK`, `UNLOCK`, or `PATCH`. Allowing the `GET` method makes the `HEAD` method also allowed. Access to other methods can be limited using the [ngx\\_http\\_access\\_module](https://nginx.org/en/docs/http/ngx_http_access_module.html), [ngx\\_http\\_auth\\_basic\\_module](https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html), and [ngx\\_http\\_auth\\_jwt\\_module](https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html) (1.13.10) modules directives:","<p>Limits allowed HTTP methods inside a location. The <code>method</code> parameter can be one of the following: <code>GET</code>, <code>HEAD</code>, <code>POST</code>, <code>PUT</code>, <code>DELETE</code>, <code>MKCOL</code>, <code>COPY</code>, <code>MOVE</code>, <code>OPTIONS</code>, <code>PROPFIND</code>, <code>PROPPATCH</code>, <code>LOCK</code>, <code>UNLOCK</code>, or <code>PATCH</code>. Allowing the <code>GET</code> method makes the <code>HEAD</code> method also allowed. Access to other methods can be limited using the <a href=\"https://nginx.org/en/docs/http/ngx_http_access_module.html\">ngx_http_access_module</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html\">ngx_http_auth_basic_module</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html\">ngx_http_auth_jwt_module</a> (1.13.10) modules directives:</p><blockquote class=\"example\"><pre>limit_except GET {\n    allow 192.168.1.0/32;\n    deny  all;\n}\n</pre></blockquote><p>Please note that this will limit access to all methods <strong>except</strong> GET and HEAD.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_except</strong> <code>method</code> ... { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>"],
[4,"limit_rate","Limits the rate of response transmission to a client. The `rate` is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if a client simultaneously opens two connections, the overall rate will be twice as much as the specified limit.","<p>Limits the rate of response transmission to a client. The <code>rate</code> is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if a client simultaneously opens two connections, the overall rate will be twice as much as the specified limit.</p><p>Parameter value can contain variables (1.17.0). It may be useful in cases where rate should be limited depending on a certain condition:</p><blockquote class=\"example\"><pre>map $slow $rate {\n    1     4k;\n    2     8k;\n}\n\nlimit_rate $rate;\n</pre></blockquote><p>Rate limit can also be set in the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#var_limit_rate\"><code>$limit_rate</code></a> variable, however, since version 1.17.0, this method is not recommended:</p><blockquote class=\"example\"><pre>server {\n\n    if ($slow) {\n        set $limit_rate 4k;\n    }\n\n    ...\n}\n</pre></blockquote><p>Rate limit can also be set in the “X-Accel-Limit-Rate” header field of a proxied server response. This capability can be disabled using the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers\">proxy_ignore_headers</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers\">fastcgi_ignore_headers</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers\">uwsgi_ignore_headers</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_ignore_headers\">scgi_ignore_headers</a> directives.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_rate</strong> <code>rate</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>limit_rate 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>"],
[4,"limit_rate_after","Sets the initial amount after which the further transmission of a response to a client will be rate limited. Parameter value can contain variables (1.17.0).","<p>Sets the initial amount after which the further transmission of a response to a client will be rate limited. Parameter value can contain variables (1.17.0).</p><p>Example:</p><blockquote class=\"example\"><pre>location /flv/ {\n    flv;\n    limit_rate_after 500k;\n    limit_rate       50k;\n}\n</pre></blockquote>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_rate_after</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>limit_rate_after 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.0.</p>"],
[4,"lingering_close","Controls how nginx closes client connections.","<p>Controls how nginx closes client connections.</p><p>The default value “<code>on</code>” instructs nginx to <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_timeout\">wait for</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_time\">process</a> additional data from a client before fully closing a connection, but only if heuristics suggests that a client may be sending more data.</p><p>The value “<code>always</code>” will cause nginx to unconditionally wait for and process additional client data.</p><p>The value “<code>off</code>” tells nginx to never wait for more data and close the connection immediately. This behavior breaks the protocol and should not be used under normal circumstances.</p><p>To control closing <a href=\"https://nginx.org/en/docs/http/ngx_http_v2_module.html\">HTTP/2</a> connections, the directive must be specified on the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">server</a> level (1.19.1).</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>lingering_close</strong> <code>off</code> | <code>on</code> | <code>always</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>lingering_close on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in versions 1.1.0 and 1.0.6.</p>"],
[4,"lingering_time","When [lingering\\_close](https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_close) is in effect, this directive specifies the maximum time during which nginx will process (read and ignore) additional data coming from a client. After that, the connection will be closed, even if there will be more data.","<p>When <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_close\">lingering_close</a> is in effect, this directive specifies the maximum time during which nginx will process (read and ignore) additional data coming from a client. After that, the connection will be closed, even if there will be more data.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>lingering_time</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>lingering_time 30s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"lingering_timeout","When [lingering\\_close](https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_close) is in effect, this directive specifies the maximum waiting time for more client data to arrive. If data are not received during this time, the connection is closed. Otherwise, the data are read and ignored, and nginx starts waiting for more data again. The “wait-read-ignore” cycle is repeated, but no longer than specified by the [lingering\\_time](https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_time) directive.","<p>When <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_close\">lingering_close</a> is in effect, this directive specifies the maximum waiting time for more client data to arrive. If data are not received during this time, the connection is closed. Otherwise, the data are read and ignored, and nginx starts waiting for more data again. The “wait-read-ignore” cycle is repeated, but no longer than specified by the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_time\">lingering_time</a> directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>lingering_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>lingering_timeout 5s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"listen","Sets the `address` and `port` for IP, or the `path` for a UNIX-domain socket on which the server will accept requests. Both `address` and `port`, or only `address` or only `port` can be specified. An `address` may also be a hostname, for example:","<p>Sets the <code>address</code> and <code>port</code> for IP, or the <code>path</code> for a UNIX-domain socket on which the server will accept requests. Both <code>address</code> and <code>port</code>, or only <code>address</code> or only <code>port</code> can be specified. An <code>address</code> may also be a hostname, for example:</p><blockquote class=\"example\"><pre>listen 127.0.0.1:8000;\nlisten 127.0.0.1;\nlisten 8000;\nlisten *:8000;\nlisten localhost:8000;\n</pre></blockquote><p>IPv6 addresses (0.7.36) are specified in square brackets:</p><blockquote class=\"example\"><pre>listen [::]:8000;\nlisten [::1];\n</pre></blockquote><p>UNIX-domain sockets (0.8.21) are specified with the “<code>unix:</code>” prefix:</p><blockquote class=\"example\"><pre>listen unix:/var/run/nginx.sock;\n</pre></blockquote><p>If only <code>address</code> is given, the port 80 is used.</p><p>If the directive is not present then either <code>*:80</code> is used if nginx runs with the superuser privileges, or <code>*:8000</code> otherwise.</p><p>The <code>default_server</code> parameter, if present, will cause the server to become the default server for the specified <code>address</code>:<code>port</code> pair. If none of the directives have the <code>default_server</code> parameter then the first server with the <code>address</code>:<code>port</code> pair will be the default server for this pair.</p><blockquote class=\"note\">In versions prior to 0.8.21 this parameter is named simply <code>default</code>.</blockquote><p>The <code>ssl</code> parameter (0.7.14) allows specifying that all connections accepted on this port should work in SSL mode. This allows for a more compact <a href=\"https://nginx.org/en/docs/http/configuring_https_servers.html#single_http_https_server\">configuration</a> for the server that handles both HTTP and HTTPS requests.</p><p>The <code>http2</code> parameter (1.9.5) configures the port to accept <a href=\"https://nginx.org/en/docs/http/ngx_http_v2_module.html\">HTTP/2</a> connections. Normally, for this to work the <code>ssl</code> parameter should be specified as well, but nginx can also be configured to accept HTTP/2 connections without SSL.</p><blockquote class=\"note\">The parameter is deprecated, the <a href=\"https://nginx.org/en/docs/http/ngx_http_v2_module.html#http2\">http2</a> directive should be used instead.</blockquote>",["In versions prior to 0.8.21 this parameter is named simply `default`.","The parameter is deprecated, the [http2](https://nginx.org/en/docs/http/ngx_http_v2_module.html#http2) directive should be used instead."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>listen</strong> <code>address</code>[:<code>port</code>] [<code>default_server</code>] [<code>ssl</code>] [<code>http2</code> | <code>quic</code>] [<code>proxy_protocol</code>] [<code>setfib</code>=<code>number</code>] [<code>fastopen</code>=<code>number</code>] [<code>backlog</code>=<code>number</code>] [<code>rcvbuf</code>=<code>size</code>] [<code>sndbuf</code>=<code>size</code>] [<code>accept_filter</code>=<code>filter</code>] [<code>deferred</code>] [<code>bind</code>] [<code>ipv6only</code>=<code>on</code>|<code>off</code>] [<code>reuseport</code>] [<code>so_keepalive</code>=<code>on</code>|<code>off</code>|[<code>keepidle</code>]:[<code>keepintvl</code>]:[<code>keepcnt</code>]];</code><br><code><strong>listen</strong> <code>port</code> [<code>default_server</code>] [<code>ssl</code>] [<code>http2</code> | <code>quic</code>] [<code>proxy_protocol</code>] [<code>setfib</code>=<code>number</code>] [<code>fastopen</code>=<code>number</code>] [<code>backlog</code>=<code>number</code>] [<code>rcvbuf</code>=<code>size</code>] [<code>sndbuf</code>=<code>size</code>] [<code>accept_filter</code>=<code>filter</code>] [<code>deferred</code>] [<code>bind</code>] [<code>ipv6only</code>=<code>on</code>|<code>off</code>] [<code>reuseport</code>] [<code>so_keepalive</code>=<code>on</code>|<code>off</code>|[<code>keepidle</code>]:[<code>keepintvl</code>]:[<code>keepcnt</code>]];</code><br><code><strong>listen</strong> <code>unix:</code><code>path</code> [<code>default_server</code>] [<code>ssl</code>] [<code>http2</code> | <code>quic</code>] [<code>proxy_protocol</code>] [<code>backlog</code>=<code>number</code>] [<code>rcvbuf</code>=<code>size</code>] [<code>sndbuf</code>=<code>size</code>] [<code>accept_filter</code>=<code>filter</code>] [<code>deferred</code>] [<code>bind</code>] [<code>so_keepalive</code>=<code>on</code>|<code>off</code>|[<code>keepidle</code>]:[<code>keepintvl</code>]:[<code>keepcnt</code>]];</code><br></td></tr><tr><th>Default:</th><td><pre>listen *:80 | *:8000;</pre></td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>"],
[4,"location","Sets configuration depending on a request URI.","<p>Sets configuration depending on a request URI.</p><p>The matching is performed against a normalized URI, after decoding the text encoded in the “<code>%XX</code>” form, resolving references to relative path components “<code>.</code>” and “<code>..</code>”, and possible <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#merge_slashes\">compression</a> of two or more adjacent slashes into a single slash.</p><p>A location can either be defined by a prefix string, or by a regular expression. Regular expressions are specified with the preceding “<code>~*</code>” modifier (for case-insensitive matching), or the “<code>~</code>” modifier (for case-sensitive matching). To find location matching a given request, nginx first checks locations defined using the prefix strings (prefix locations). Among them, the location with the longest matching prefix is selected and remembered. Then regular expressions are checked, in the order of their appearance in the configuration file. The search of regular expressions terminates on the first match, and the corresponding configuration is used. If no match with a regular expression is found then the configuration of the prefix location remembered earlier is used.</p><p><code>location</code> blocks can be nested, with some exceptions mentioned below.</p><p>For case-insensitive operating systems such as macOS and Cygwin, matching with prefix strings ignores a case (0.7.7). However, comparison is limited to one-byte locales.</p><p>Regular expressions can contain captures (0.7.40) that can later be used in other directives.</p><p>If the longest matching prefix location has the “<code>^~</code>” modifier then regular expressions are not checked.</p><p>Also, using the “<code>=</code>” modifier it is possible to define an exact match of URI and location. If an exact match is found, the search terminates. For example, if a “<code>/</code>” request happens frequently, defining “<code>location = /</code>” will speed up the processing of these requests, as search terminates right after the first comparison. Such a location cannot obviously contain nested locations.</p><blockquote class=\"note\">In versions from 0.7.1 to 0.8.41, if a request matched the prefix location without the “<code>=</code>” and “<code>^~</code>” modifiers, the search also terminated and regular expressions were not checked.</blockquote><p>Let’s illustrate the above by an example:</p><blockquote class=\"example\"><pre>location = / {\n    [ configuration A ]\n}\n\nlocation / {\n    [ configuration B ]\n}\n\nlocation /documents/ {\n    [ configuration C ]\n}\n\nlocation ^~ /images/ {\n    [ configuration D ]\n}\n\nlocation ~* \\.(gif|jpg|jpeg)$ {\n    [ configuration E ]\n}\n</pre></blockquote><p>The “<code>/</code>” request will match configuration A, the “<code>/index.html</code>” request will match configuration B, the “<code>/documents/document.html</code>” request will match configuration C, the “<code>/images/1.gif</code>” request will match configuration D, and the “<code>/documents/1.jpg</code>” request will match configuration E.</p>",["In versions from 0.7.1 to 0.8.41, if a request matched the prefix location without the “`=`” and “`^~`” modifiers, the search also terminated and regular expressions were not checked."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>location</strong> [ <code>=</code> | <code>~</code> | <code>~*</code> | <code>^~</code> ] <code>uri</code> { ... }</code><br><code><strong>location</strong> <code>@</code><code>name</code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"log_not_found","Enables or disables logging of errors about not found files into [error\\_log](https://nginx.org/en/docs/ngx_core_module.html#error_log).","<p>Enables or disables logging of errors about not found files into <a href=\"https://nginx.org/en/docs/ngx_core_module.html#error_log\">error_log</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>log_not_found</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>log_not_found on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"log_subrequest","Enables or disables logging of subrequests into [access\\_log](https://nginx.org/en/docs/http/ngx_http_log_module.html#access_log).","<p>Enables or disables logging of subrequests into <a href=\"https://nginx.org/en/docs/http/ngx_http_log_module.html#access_log\">access_log</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>log_subrequest</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>log_subrequest off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"max_ranges","Limits the maximum allowed number of ranges in byte-range requests. Requests that exceed the limit are processed as if there were no byte ranges specified. By default, the number of ranges is not limited. The zero value disables the byte-range support completely.","<p>Limits the maximum allowed number of ranges in byte-range requests. Requests that exceed the limit are processed as if there were no byte ranges specified. By default, the number of ranges is not limited. The zero value disables the byte-range support completely.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>max_ranges</strong> <code>number</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.2.</p>"],
[4,"merge_slashes","Enables or disables compression of two or more adjacent slashes in a URI into a single slash.","<p>Enables or disables compression of two or more adjacent slashes in a URI into a single slash.</p><p>Note that compression is essential for the correct matching of prefix string and regular expression locations. Without it, the “<code>//scripts/one.php</code>” request would not match</p><blockquote class=\"example\"><pre>location /scripts/ {\n    ...\n}\n</pre></blockquote><p>and might be processed as a static file. So it gets converted to “<code>/scripts/one.php</code>”.</p><p>Turning the compression <code>off</code> can become necessary if a URI contains base64-encoded names, since base64 uses the “<code>/</code>” character internally. However, for security considerations, it is better to avoid turning the compression off.</p><p>If the directive is specified on the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">server</a> level, the value from the default server can be used. Details are provided in the “<a href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\">Virtual server selection</a>” section.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>merge_slashes</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>merge_slashes on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"msie_padding","Enables or disables adding comments to responses for MSIE clients with status greater than 400 to increase the response size to 512 bytes.","<p>Enables or disables adding comments to responses for MSIE clients with status greater than 400 to increase the response size to 512 bytes.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>msie_padding</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>msie_padding on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"msie_refresh","Enables or disables issuing refreshes instead of redirects for MSIE clients.","<p>Enables or disables issuing refreshes instead of redirects for MSIE clients.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>msie_refresh</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>msie_refresh off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"open_file_cache","Configures a cache that can store:","<p>Configures a cache that can store:</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>open_file_cache</strong> <code>off</code>;</code><br><code><strong>open_file_cache</strong> <code>max</code>=<code>N</code> [<code>inactive</code>=<code>time</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>open_file_cache off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"open_file_cache_errors","Enables or disables caching of file lookup errors by [open\\_file\\_cache](https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache).","<p>Enables or disables caching of file lookup errors by <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache\">open_file_cache</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>open_file_cache_errors</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>open_file_cache_errors off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"open_file_cache_min_uses","Sets the minimum `number` of file accesses during the period configured by the `inactive` parameter of the [open\\_file\\_cache](https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache) directive, required for a file descriptor to remain open in the cache.","<p>Sets the minimum <code>number</code> of file accesses during the period configured by the <code>inactive</code> parameter of the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache\">open_file_cache</a> directive, required for a file descriptor to remain open in the cache.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>open_file_cache_min_uses</strong> <code>number</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>open_file_cache_min_uses 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"open_file_cache_valid","Sets a time after which [open\\_file\\_cache](https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache) elements should be validated.","<p>Sets a time after which <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache\">open_file_cache</a> elements should be validated.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>open_file_cache_valid</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>open_file_cache_valid 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"output_buffers","Sets the `number` and `size` of the buffers used for reading a response from a disk.","<p>Sets the <code>number</code> and <code>size</code> of the buffers used for reading a response from a disk.</p><blockquote class=\"note\">Prior to version 1.9.5, the default value was 1 32k.</blockquote>",["Prior to version 1.9.5, the default value was 1 32k."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>output_buffers</strong> <code>number</code> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>output_buffers 2 32k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"port_in_redirect","Enables or disables specifying the port in [absolute](https://nginx.org/en/docs/http/ngx_http_core_module.html#absolute_redirect) redirects issued by nginx.","<p>Enables or disables specifying the port in <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#absolute_redirect\">absolute</a> redirects issued by nginx.</p><p>The use of the primary server name in redirects is controlled by the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name_in_redirect\">server_name_in_redirect</a> directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>port_in_redirect</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>port_in_redirect on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"postpone_output","If possible, the transmission of client data will be postponed until nginx has at least `size` bytes of data to send. The zero value disables postponing data transmission.","<p>If possible, the transmission of client data will be postponed until nginx has at least <code>size</code> bytes of data to send. The zero value disables postponing data transmission.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>postpone_output</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>postpone_output 1460;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"read_ahead","Sets the amount of pre-reading for the kernel when working with file.","<p>Sets the amount of pre-reading for the kernel when working with file.</p><p>On Linux, the <code>posix_fadvise(0, 0, 0, POSIX_FADV_SEQUENTIAL)</code> system call is used, and so the <code>size</code> parameter is ignored.</p><p>On FreeBSD, the <code>fcntl(O_READAHEAD,</code> <code>size</code><code>)</code> system call, supported since FreeBSD&nbsp;9.0-CURRENT, is used. FreeBSD&nbsp;7 has to be <a href=\"http://sysoev.ru/freebsd/patch.readahead.txt\">patched</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>read_ahead</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>read_ahead 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"recursive_error_pages","Enables or disables doing several redirects using the [error\\_page](https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page) directive. The number of such redirects is [limited](https://nginx.org/en/docs/http/ngx_http_core_module.html#internal).","<p>Enables or disables doing several redirects using the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\">error_page</a> directive. The number of such redirects is <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#internal\">limited</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>recursive_error_pages</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>recursive_error_pages off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"request_pool_size","Allows accurate tuning of per-request memory allocations. This directive has minimal impact on performance and should not generally be used.","<p>Allows accurate tuning of per-request memory allocations. This directive has minimal impact on performance and should not generally be used.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>request_pool_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>request_pool_size 4k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"reset_timedout_connection","Enables or disables resetting timed out connections and connections [closed](https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#return) with the non-standard code 444 (1.15.2). The reset is performed as follows. Before closing a socket, the `SO_LINGER` option is set on it with a timeout value of 0. When the socket is closed, TCP RST is sent to the client, and all memory occupied by this socket is released. This helps avoid keeping an already closed socket with filled buffers in a FIN\\_WAIT1 state for a long time.","<p>Enables or disables resetting timed out connections and connections <a href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#return\">closed</a> with the non-standard code 444 (1.15.2). The reset is performed as follows. Before closing a socket, the <code>SO_LINGER</code> option is set on it with a timeout value of 0. When the socket is closed, TCP RST is sent to the client, and all memory occupied by this socket is released. This helps avoid keeping an already closed socket with filled buffers in a FIN_WAIT1 state for a long time.</p><p>It should be noted that timed out keep-alive connections are closed normally.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>reset_timedout_connection</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>reset_timedout_connection off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"resolver","Configures name servers used to resolve names of upstream servers into addresses, for example:","<p>Configures name servers used to resolve names of upstream servers into addresses, for example:</p><blockquote class=\"example\"><pre>resolver 127.0.0.1 [::1]:5353;\n</pre></blockquote><p>The address can be specified as a domain name or IP address, with an optional port (1.3.1, 1.2.2). If port is not specified, the port 53 is used. Name servers are queried in a round-robin fashion.</p><blockquote class=\"note\">Before version 1.1.7, only a single name server could be configured. Specifying name servers using IPv6 addresses is supported starting from versions 1.3.1 and 1.2.2.</blockquote>",["Before version 1.1.7, only a single name server could be configured. Specifying name servers using IPv6 addresses is supported starting from versions 1.3.1 and 1.2.2."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>resolver</strong> <code>address</code> ... [<code>valid</code>=<code>time</code>] [<code>ipv4</code>=<code>on</code>|<code>off</code>] [<code>ipv6</code>=<code>on</code>|<code>off</code>] [<code>status_zone</code>=<code>zone</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"resolver_timeout","Sets a timeout for name resolution, for example:","<p>Sets a timeout for name resolution, for example:</p><blockquote class=\"example\"><pre>resolver_timeout 5s;\n</pre></blockquote>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>resolver_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>resolver_timeout 30s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"root","Sets the root directory for requests. For example, with the following configuration","<p>Sets the root directory for requests. For example, with the following configuration</p><blockquote class=\"example\"><pre>location /i/ {\n    root /data/w3;\n}\n</pre></blockquote><p>The <code>/data/w3/i/top.gif</code> file will be sent in response to the “<code>/i/top.gif</code>” request.</p><p>The <code>path</code> value can contain variables, except <code>$document_root</code> and <code>$realpath_root</code>.</p><p>A path to the file is constructed by merely adding a URI to the value of the <code>root</code> directive. If a URI has to be modified, the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\">alias</a> directive should be used.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>root</strong> <code>path</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>root html;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>"],
[4,"satisfy","Allows access if all (`all`) or at least one (`any`) of the [ngx\\_http\\_access\\_module](https://nginx.org/en/docs/http/ngx_http_access_module.html), [ngx\\_http\\_auth\\_basic\\_module](https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html), [ngx\\_http\\_auth\\_request\\_module](https://nginx.org/en/docs/http/ngx_http_auth_request_module.html), or [ngx\\_http\\_auth\\_jwt\\_module](https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html) modules allow access.","<p>Allows access if all (<code>all</code>) or at least one (<code>any</code>) of the <a href=\"https://nginx.org/en/docs/http/ngx_http_access_module.html\">ngx_http_access_module</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html\">ngx_http_auth_basic_module</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_request_module.html\">ngx_http_auth_request_module</a>, or <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html\">ngx_http_auth_jwt_module</a> modules allow access.</p><p>Example:</p><blockquote class=\"example\"><pre>location / {\n    satisfy any;\n\n    allow 192.168.1.0/32;\n    deny  all;\n\n    auth_basic           \"closed site\";\n    auth_basic_user_file conf/htpasswd;\n}\n</pre></blockquote>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>satisfy</strong> <code>all</code> | <code>any</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>satisfy all;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"send_lowat","If the directive is set to a non-zero value, nginx will try to minimize the number of send operations on client sockets by using either `NOTE_LOWAT` flag of the [kqueue](https://nginx.org/en/docs/events.html#kqueue) method or the `SO_SNDLOWAT` socket option. In both cases the specified `size` is used.","<p>If the directive is set to a non-zero value, nginx will try to minimize the number of send operations on client sockets by using either <code>NOTE_LOWAT</code> flag of the <a href=\"https://nginx.org/en/docs/events.html#kqueue\">kqueue</a> method or the <code>SO_SNDLOWAT</code> socket option. In both cases the specified <code>size</code> is used.</p><p>This directive is ignored on Linux, Solaris, and Windows.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>send_lowat</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>send_lowat 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"send_timeout","Sets a timeout for transmitting a response to the client. The timeout is set only between two successive write operations, not for the transmission of the whole response. If the client does not receive anything within this time, the connection is closed.","<p>Sets a timeout for transmitting a response to the client. The timeout is set only between two successive write operations, not for the transmission of the whole response. If the client does not receive anything within this time, the connection is closed.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>send_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>send_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"sendfile","Enables or disables the use of `sendfile()`.","<p>Enables or disables the use of <code>sendfile()</code>.</p><p>Starting from nginx&nbsp;0.8.12 and FreeBSD&nbsp;5.2.1, <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#aio\">aio</a> can be used to pre-load data for <code>sendfile()</code>:</p><blockquote class=\"example\"><pre>location /video/ {\n    sendfile       on;\n    tcp_nopush     on;\n    aio            on;\n}\n</pre></blockquote><p>In this configuration, <code>sendfile()</code> is called with the <code>SF_NODISKIO</code> flag which causes it not to block on disk I/O, but, instead, report back that the data are not in memory. nginx then initiates an asynchronous data load by reading one byte. On the first read, the FreeBSD kernel loads the first 128K bytes of a file into memory, although next reads will only load data in 16K chunks. This can be changed using the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#read_ahead\">read_ahead</a> directive.</p><blockquote class=\"note\">Before version 1.7.11, pre-loading could be enabled with <code>aio sendfile;</code>.</blockquote>",["Before version 1.7.11, pre-loading could be enabled with `aio sendfile;`."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>sendfile</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>sendfile off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>"],
[4,"sendfile_max_chunk","Limits the amount of data that can be transferred in a single `sendfile()` call. Without the limit, one fast connection may seize the worker process entirely.","<p>Limits the amount of data that can be transferred in a single <code>sendfile()</code> call. Without the limit, one fast connection may seize the worker process entirely.</p><blockquote class=\"note\">Prior to version 1.21.4, by default there was no limit.</blockquote>",["Prior to version 1.21.4, by default there was no limit."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>sendfile_max_chunk</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>sendfile_max_chunk 2m;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"server","Sets configuration for a virtual server. There is no clear separation between IP-based (based on the IP address) and name-based (based on the “Host” request header field) virtual servers. Instead, the [listen](https://nginx.org/en/docs/http/ngx_http_core_module.html#listen) directives describe all addresses and ports that should accept connections for the server, and the [server\\_name](https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name) directive lists all server names. Example configurations are provided in the “[How nginx processes a request](https://nginx.org/en/docs/http/request_processing.html)” document.","<p>Sets configuration for a virtual server. There is no clear separation between IP-based (based on the IP address) and name-based (based on the “Host” request header field) virtual servers. Instead, the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#listen\">listen</a> directives describe all addresses and ports that should accept connections for the server, and the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name\">server_name</a> directive lists all server names. Example configurations are provided in the “<a href=\"https://nginx.org/en/docs/http/request_processing.html\">How nginx processes a request</a>” document.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>server</strong> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>"],
[4,"server_name","Sets names of a virtual server, for example:","<p>Sets names of a virtual server, for example:</p><blockquote class=\"example\"><pre>server {\n    server_name example.com www.example.com;\n}\n</pre></blockquote><p>The first name becomes the primary server name.</p><p>Server names can include an asterisk (“<code>*</code>”) replacing the first or last part of a name:</p><blockquote class=\"example\"><pre>server {\n    server_name example.com *.example.com www.example.*;\n}\n</pre></blockquote><p>Such names are called wildcard names.</p><p>The first two of the names mentioned above can be combined in one:</p><blockquote class=\"example\"><pre>server {\n    server_name .example.com;\n}\n</pre></blockquote><p>It is also possible to use regular expressions in server names, preceding the name with a tilde (“<code>~</code>”):</p><blockquote class=\"example\"><pre>server {\n    server_name www.example.com ~^www\\d+\\.example\\.com$;\n}\n</pre></blockquote><p>Regular expressions can contain captures (0.7.40) that can later be used in other directives:</p><blockquote class=\"example\"><pre>server {\n    server_name ~^(www\\.)?(.+)$;\n\n    location / {\n        root /sites/$2;\n    }\n}\n\nserver {\n    server_name _;\n\n    location / {\n        root /sites/default;\n    }\n}\n</pre></blockquote><p>Named captures in regular expressions create variables (0.8.25) that can later be used in other directives:</p><blockquote class=\"example\"><pre>server {\n    server_name ~^(www\\.)?(?&lt;domain&gt;.+)$;\n\n    location / {\n        root /sites/$domain;\n    }\n}\n\nserver {\n    server_name _;\n\n    location / {\n        root /sites/default;\n    }\n}\n</pre></blockquote><p>If the directive’s parameter is set to “<code>$hostname</code>” (0.9.4), the machine’s hostname is inserted.</p><p>It is also possible to specify an empty server name (0.7.11):</p><blockquote class=\"example\"><pre>server {\n    server_name www.example.com \"\";\n}\n</pre></blockquote><p>It allows this server to process requests without the “Host” header field&nbsp;— instead of the default server&nbsp;— for the given address:port pair. This is the default setting.</p><blockquote class=\"note\">Before 0.8.48, the machine’s hostname was used by default.</blockquote><p>During searching for a virtual server by name, if the name matches more than one of the specified variants, (e.g. both a wildcard name and regular expression match), the first matching variant will be chosen, in the following order of priority:</p>",["Before 0.8.48, the machine’s hostname was used by default."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>server_name</strong> <code>name</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>server_name \"\";</pre></td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>"],
[4,"server_name_in_redirect","Enables or disables the use of the primary server name, specified by the [server\\_name](https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name) directive, in [absolute](https://nginx.org/en/docs/http/ngx_http_core_module.html#absolute_redirect) redirects issued by nginx. When the use of the primary server name is disabled, the name from the “Host” request header field is used. If this field is not present, the IP address of the server is used.","<p>Enables or disables the use of the primary server name, specified by the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name\">server_name</a> directive, in <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#absolute_redirect\">absolute</a> redirects issued by nginx. When the use of the primary server name is disabled, the name from the “Host” request header field is used. If this field is not present, the IP address of the server is used.</p><p>The use of a port in redirects is controlled by the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#port_in_redirect\">port_in_redirect</a> directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>server_name_in_redirect</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>server_name_in_redirect off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"server_names_hash_bucket_size","Sets the bucket size for the server names hash tables. The default value depends on the size of the processor’s cache line. The details of setting up hash tables are provided in a separate [document](https://nginx.org/en/docs/hash.html).","<p>Sets the bucket size for the server names hash tables. The default value depends on the size of the processor’s cache line. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>server_names_hash_bucket_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>server_names_hash_bucket_size 32|64|128;</pre></td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>"],
[4,"server_names_hash_max_size","Sets the maximum `size` of the server names hash tables. The details of setting up hash tables are provided in a separate [document](https://nginx.org/en/docs/hash.html).","<p>Sets the maximum <code>size</code> of the server names hash tables. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>server_names_hash_max_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>server_names_hash_max_size 512;</pre></td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>"],
[4,"server_tokens","Enables or disables emitting nginx version on error pages and in the “Server” response header field.","<p>Enables or disables emitting nginx version on error pages and in the “Server” response header field.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>server_tokens</strong> <code>on</code> | <code>off</code> | <code>build</code> | <code>string</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>server_tokens on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"subrequest_output_buffer_size","Sets the `size` of the buffer used for storing the response body of a subrequest. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform. It can be made smaller, however.","<p>Sets the <code>size</code> of the buffer used for storing the response body of a subrequest. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform. It can be made smaller, however.</p><p>The directive is applicable only for subrequests with response bodies saved into memory. For example, such subrequests are created by <a href=\"https://nginx.org/en/docs/http/ngx_http_ssi_module.html#ssi_include_set\">SSI</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>subrequest_output_buffer_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>subrequest_output_buffer_size 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.13.10.</p>"],
[4,"tcp_nodelay","Enables or disables the use of the `TCP_NODELAY` option. The option is enabled when a connection is transitioned into the keep-alive state. Additionally, it is enabled on SSL connections, for unbuffered proxying, and for [WebSocket](https://nginx.org/en/docs/http/websocket.html) proxying.","<p>Enables or disables the use of the <code>TCP_NODELAY</code> option. The option is enabled when a connection is transitioned into the keep-alive state. Additionally, it is enabled on SSL connections, for unbuffered proxying, and for <a href=\"https://nginx.org/en/docs/http/websocket.html\">WebSocket</a> proxying.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>tcp_nodelay</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>tcp_nodelay on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"tcp_nopush","Enables or disables the use of the `TCP_NOPUSH` socket option on FreeBSD or the `TCP_CORK` socket option on Linux. The options are enabled only when [sendfile](https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile) is used. Enabling the option allows","<p>Enables or disables the use of the <code>TCP_NOPUSH</code> socket option on FreeBSD or the <code>TCP_CORK</code> socket option on Linux. The options are enabled only when <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\">sendfile</a> is used. Enabling the option allows</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>tcp_nopush</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>tcp_nopush off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"try_files","Checks the existence of files in the specified order and uses the first found file for request processing; the processing is performed in the current context. The path to a file is constructed from the `file` parameter according to the [root](https://nginx.org/en/docs/http/ngx_http_core_module.html#root) and [alias](https://nginx.org/en/docs/http/ngx_http_core_module.html#alias) directives. It is possible to check directory’s existence by specifying a slash at the end of a name, e.g. “`$uri/`”. If none of the files were found, an internal redirect to the `uri` specified in the last parameter is made. For example:","<p>Checks the existence of files in the specified order and uses the first found file for request processing; the processing is performed in the current context. The path to a file is constructed from the <code>file</code> parameter according to the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\">root</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\">alias</a> directives. It is possible to check directory’s existence by specifying a slash at the end of a name, e.g. “<code>$uri/</code>”. If none of the files were found, an internal redirect to the <code>uri</code> specified in the last parameter is made. For example:</p><blockquote class=\"example\"><pre>location /images/ {\n    try_files $uri /images/default.gif;\n}\n\nlocation = /images/default.gif {\n    expires 30s;\n}\n</pre></blockquote><p>The last parameter can also point to a named location, as shown in examples below. Starting from version 0.7.51, the last parameter can also be a <code>code</code>:</p><blockquote class=\"example\"><pre>location / {\n    try_files $uri $uri/index.html $uri.html =404;\n}\n</pre></blockquote><p>Example in proxying Mongrel:</p><blockquote class=\"example\"><pre>location / {\n    try_files /system/maintenance.html\n              $uri $uri/index.html $uri.html\n              @mongrel;\n}\n\nlocation @mongrel {\n    proxy_pass http://mongrel;\n}\n</pre></blockquote><p>Example for Drupal/FastCGI:</p><blockquote class=\"example\"><pre>location / {\n    try_files $uri $uri/ @drupal;\n}\n\nlocation ~ \\.php$ {\n    try_files $uri @drupal;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n    fastcgi_param SCRIPT_NAME     $fastcgi_script_name;\n    fastcgi_param QUERY_STRING    $args;\n\n    ... other fastcgi_param's\n}\n\nlocation @drupal {\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to/index.php;\n    fastcgi_param SCRIPT_NAME     /index.php;\n    fastcgi_param QUERY_STRING    q=$uri&amp;$args;\n\n    ... other fastcgi_param's\n}\n</pre></blockquote><p>In the following example,</p><blockquote class=\"example\"><pre>location / {\n    try_files $uri $uri/ @drupal;\n}\n</pre></blockquote><p>the <code>try_files</code> directive is equivalent to</p><blockquote class=\"example\"><pre>location / {\n    error_page 404 = @drupal;\n    log_not_found off;\n}\n</pre></blockquote><p>And here,</p><blockquote class=\"example\"><pre>location ~ \\.php$ {\n    try_files $uri @drupal;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n\n    ...\n}\n</pre></blockquote><p><code>try_files</code> checks the existence of the PHP file before passing the request to the FastCGI server.</p><p>Example for Wordpress and Joomla:</p><blockquote class=\"example\"><pre>location / {\n    try_files $uri $uri/ @wordpress;\n}\n\nlocation ~ \\.php$ {\n    try_files $uri @wordpress;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n    ... other fastcgi_param's\n}\n\nlocation @wordpress {\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to/index.php;\n    ... other fastcgi_param's\n}\n</pre></blockquote>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>try_files</strong> <code>file</code> ... <code>uri</code>;</code><br><code><strong>try_files</strong> <code>file</code> ... =<code>code</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"types","Maps file name extensions to MIME types of responses. Extensions are case-insensitive. Several extensions can be mapped to one type, for example:","<p>Maps file name extensions to MIME types of responses. Extensions are case-insensitive. Several extensions can be mapped to one type, for example:</p><blockquote class=\"example\"><pre>types {\n    application/octet-stream bin exe dll;\n    application/octet-stream deb;\n    application/octet-stream dmg;\n}\n</pre></blockquote><p>A sufficiently full mapping table is distributed with nginx in the <code>conf/mime.types</code> file.</p><p>To make a particular location emit the “<code>application/octet-stream</code>” MIME type for all requests, the following configuration can be used:</p><blockquote class=\"example\"><pre>location /download/ {\n    types        { }\n    default_type application/octet-stream;\n}\n</pre></blockquote>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>types</strong> { ... }</code><br></td></tr><tr><th>Default:</th><td><pre>types {\n    text/html  html;\n    image/gif  gif;\n    image/jpeg jpg;\n}</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"types_hash_bucket_size","Sets the bucket size for the types hash tables. The details of setting up hash tables are provided in a separate [document](https://nginx.org/en/docs/hash.html).","<p>Sets the bucket size for the types hash tables. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p><blockquote class=\"note\">Prior to version 1.5.13, the default value depended on the size of the processor’s cache line.</blockquote>",["Prior to version 1.5.13, the default value depended on the size of the processor’s cache line."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>types_hash_bucket_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>types_hash_bucket_size 64;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"types_hash_max_size","Sets the maximum `size` of the types hash tables. The details of setting up hash tables are provided in a separate [document](https://nginx.org/en/docs/hash.html).","<p>Sets the maximum <code>size</code> of the types hash tables. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>types_hash_max_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>types_hash_max_size 1024;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"underscores_in_headers","Enables or disables the use of underscores in client request header fields. When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid and become subject to the [ignore\\_invalid\\_headers](https://nginx.org/en/docs/http/ngx_http_core_module.html#ignore_invalid_headers) directive.","<p>Enables or disables the use of underscores in client request header fields. When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid and become subject to the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#ignore_invalid_headers\">ignore_invalid_headers</a> directive.</p><p>If the directive is specified on the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">server</a> level, the value from the default server can be used. Details are provided in the “<a href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\">Virtual server selection</a>” section.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>underscores_in_headers</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>underscores_in_headers off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>"],
[4,"variables_hash_bucket_size","Sets the bucket size for the variables hash table. The details of setting up hash tables are provided in a separate [document](https://nginx.org/en/docs/hash.html).","<p>Sets the bucket size for the variables hash table. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>variables_hash_bucket_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>variables_hash_bucket_size 64;</pre></td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>"],
[4,"variables_hash_max_size","Sets the maximum `size` of the variables hash table. The details of setting up hash tables are provided in a separate [document](https://nginx.org/en/docs/hash.html).","<p>Sets the maximum <code>size</code> of the variables hash table. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p><blockquote class=\"note\">Prior to version 1.5.13, the default value was 512.</blockquote>",["Prior to version 1.5.13, the default value was 512."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>variables_hash_max_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>variables_hash_max_size 1024;</pre></td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>"],
[5,"<p>The <code>ngx_http_core_module</code> module supports embedded variables with names matching the Apache Server variables. First of all, these are variables representing client request header fields, such as <code>$http_user_agent</code>, <code>$http_cookie</code>, and so on. Also there are other variables:</p><dl class=\"compact\"><dt id=\"var_arg_\"><code>$arg_</code><code>name</code></dt><dd>argument <code>name</code> in the request line</dd><dt id=\"var_args\"><code>$args</code></dt><dd>arguments in the request line</dd><dt id=\"var_binary_remote_addr\"><code>$binary_remote_addr</code></dt><dd>client address in a binary form, value’s length is always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses</dd><dt id=\"var_body_bytes_sent\"><code>$body_bytes_sent</code></dt><dd>number of bytes sent to a client, not counting the response header; this variable is compatible with the “<code>%B</code>” parameter of the <code>mod_log_config</code> Apache module</dd><dt id=\"var_bytes_sent\"><code>$bytes_sent</code></dt><dd>number of bytes sent to a client (1.3.8, 1.2.5)</dd><dt id=\"var_connection\"><code>$connection</code></dt><dd>connection serial number (1.3.8, 1.2.5)</dd><dt id=\"var_connection_requests\"><code>$connection_requests</code></dt><dd>current number of requests made through a connection (1.3.8, 1.2.5)</dd><dt id=\"var_connection_time\"><code>$connection_time</code></dt><dd>connection time in seconds with a milliseconds resolution (1.19.10)</dd><dt id=\"var_content_length\"><code>$content_length</code></dt><dd>“Content-Length” request header field</dd><dt id=\"var_content_type\"><code>$content_type</code></dt><dd>“Content-Type” request header field</dd><dt id=\"var_cookie_\"><code>$cookie_</code><code>name</code></dt><dd>the <code>name</code> cookie</dd><dt id=\"var_document_root\"><code>$document_root</code></dt><dd><a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\">root</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\">alias</a> directive’s value for the current request</dd><dt id=\"var_document_uri\"><code>$document_uri</code></dt><dd>same as <code>$uri</code></dd><dt id=\"var_host\"><code>$host</code></dt><dd>in this order of precedence: host name from the request line, or host name from the “Host” request header field, or the server name matching a request</dd><dt id=\"var_hostname\"><code>$hostname</code></dt><dd>host name</dd><dt id=\"var_http_\"><code>$http_</code><code>name</code></dt><dd>arbitrary request header field; the last part of a variable name is the field name converted to lower case with dashes replaced by underscores</dd><dt id=\"var_https\"><code>$https</code></dt><dd>“<code>on</code>” if connection operates in SSL mode, or an empty string otherwise</dd><dt id=\"var_is_args\"><code>$is_args</code></dt><dd>“<code>?</code>” if a request line has arguments, or an empty string otherwise</dd><dt id=\"var_limit_rate\"><code>$limit_rate</code></dt><dd>setting this variable enables response rate limiting; see <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#limit_rate\">limit_rate</a></dd><dt id=\"var_msec\"><code>$msec</code></dt><dd>current time in seconds with the milliseconds resolution (1.3.9, 1.2.6)</dd><dt id=\"var_nginx_version\"><code>$nginx_version</code></dt><dd>nginx version</dd><dt id=\"var_pid\"><code>$pid</code></dt><dd>PID of the worker process</dd><dt id=\"var_pipe\"><code>$pipe</code></dt><dd>“<code>p</code>” if request was pipelined, “<code>.</code>” otherwise (1.3.12, 1.2.7)</dd><dt id=\"var_proxy_protocol_addr\"><code>$proxy_protocol_addr</code></dt><dd>client address from the PROXY protocol header (1.5.12)<p>The PROXY protocol must be previously enabled by setting the <code>proxy_protocol</code> parameter in the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#listen\">listen</a> directive.</p></dd><dt id=\"var_proxy_protocol_port\"><code>$proxy_protocol_port</code></dt><dd>client port from the PROXY protocol header (1.11.0)<p>The PROXY protocol must be previously enabled by setting the <code>proxy_protocol</code> parameter in the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#listen\">listen</a> directive.</p></dd><dt id=\"var_proxy_protocol_server_addr\"><code>$proxy_protocol_server_addr</code></dt><dd>server address from the PROXY protocol header (1.17.6)<p>The PROXY protocol must be previously enabled by setting the <code>proxy_protocol</code> parameter in the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#listen\">listen</a> directive.</p></dd><dt id=\"var_proxy_protocol_server_port\"><code>$proxy_protocol_server_port</code></dt><dd>server port from the PROXY protocol header (1.17.6)<p>The PROXY protocol must be previously enabled by setting the <code>proxy_protocol</code> parameter in the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#listen\">listen</a> directive.</p></dd><dt id=\"var_proxy_protocol_tlv_\"><code>$proxy_protocol_tlv_</code><code>name</code></dt><dd>TLV from the PROXY Protocol header (1.23.2). The <code>name</code> can be a TLV type name or its numeric value. In the latter case, the value is hexadecimal and should be prefixed with <code>0x</code>:<blockquote class=\"example\"><pre>$proxy_protocol_tlv_alpn\n$proxy_protocol_tlv_0x01\n</pre></blockquote>SSL TLVs can also be accessed by TLV type name or its numeric value, both prefixed by <code>ssl_</code>:<blockquote class=\"example\"><pre>$proxy_protocol_tlv_ssl_version\n$proxy_protocol_tlv_ssl_0x21\n</pre></blockquote><p>The following TLV type names are supported:</p><ul class=\"compact\"><li><code>alpn</code> (<code>0x01</code>)&nbsp;- upper layer protocol used over the connection</li><li><code>authority</code> (<code>0x02</code>)&nbsp;- host name value passed by the client</li><li><code>unique_id</code> (<code>0x05</code>)&nbsp;- unique connection id</li><li><code>netns</code> (<code>0x30</code>)&nbsp;- name of the namespace</li><li><code>ssl</code> (<code>0x20</code>)&nbsp;- binary SSL TLV structure</li></ul><p></p><p>The following SSL TLV type names are supported:</p><ul class=\"compact\"><li><code>ssl_version</code> (<code>0x21</code>)&nbsp;- SSL version used in client connection</li><li><code>ssl_cn</code> (<code>0x22</code>)&nbsp;- SSL certificate Common Name</li><li><code>ssl_cipher</code> (<code>0x23</code>)&nbsp;- name of the used cipher</li><li><code>ssl_sig_alg</code> (<code>0x24</code>)&nbsp;- algorithm used to sign the certificate</li><li><code>ssl_key_alg</code> (<code>0x25</code>)&nbsp;- public-key algorithm</li></ul><p></p><p>Also, the following special SSL TLV type name is supported:</p><ul class=\"compact\"><li><code>ssl_verify</code>&nbsp;- client SSL certificate verification result, <code>0</code> if the client presented a certificate and it was successfully verified, non-zero otherwise.</li></ul><p></p><p>The PROXY protocol must be previously enabled by setting the <code>proxy_protocol</code> parameter in the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#listen\">listen</a> directive.</p></dd><dt id=\"var_query_string\"><code>$query_string</code></dt><dd>same as <code>$args</code></dd><dt id=\"var_realpath_root\"><code>$realpath_root</code></dt><dd>an absolute pathname corresponding to the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\">root</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\">alias</a> directive’s value for the current request, with all symbolic links resolved to real paths</dd><dt id=\"var_remote_addr\"><code>$remote_addr</code></dt><dd>client address</dd><dt id=\"var_remote_port\"><code>$remote_port</code></dt><dd>client port</dd><dt id=\"var_remote_user\"><code>$remote_user</code></dt><dd>user name supplied with the Basic authentication</dd><dt id=\"var_request\"><code>$request</code></dt><dd>full original request line</dd><dt id=\"var_request_body\"><code>$request_body</code></dt><dd>request body<p>The variable’s value is made available in locations processed by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\">proxy_pass</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass\">fastcgi_pass</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass\">uwsgi_pass</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass\">scgi_pass</a> directives when the request body was read to a <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size\">memory buffer</a>.</p></dd><dt id=\"var_request_body_file\"><code>$request_body_file</code></dt><dd>name of a temporary file with the request body<p>At the end of processing, the file needs to be removed. To always write the request body to a file, <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_file_only\">client_body_in_file_only</a> needs to be enabled. When the name of a temporary file is passed in a proxied request or in a request to a FastCGI/uwsgi/SCGI server, passing the request body should be disabled by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_body\">proxy_pass_request_body off</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass_request_body\">fastcgi_pass_request_body off</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass_request_body\">uwsgi_pass_request_body off</a>, or <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass_request_body\">scgi_pass_request_body off</a> directives, respectively.</p></dd><dt id=\"var_request_completion\"><code>$request_completion</code></dt><dd>“<code>OK</code>” if a request has completed, or an empty string otherwise</dd><dt id=\"var_request_filename\"><code>$request_filename</code></dt><dd>file path for the current request, based on the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\">root</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\">alias</a> directives, and the request URI</dd><dt id=\"var_request_id\"><code>$request_id</code></dt><dd>unique request identifier generated from 16 random bytes, in hexadecimal (1.11.0)</dd><dt id=\"var_request_length\"><code>$request_length</code></dt><dd>request length (including request line, header, and request body) (1.3.12, 1.2.7)</dd><dt id=\"var_request_method\"><code>$request_method</code></dt><dd>request method, usually “<code>GET</code>” or “<code>POST</code>”</dd><dt id=\"var_request_time\"><code>$request_time</code></dt><dd>request processing time in seconds with a milliseconds resolution (1.3.9, 1.2.6); time elapsed since the first bytes were read from the client</dd><dt id=\"var_request_uri\"><code>$request_uri</code></dt><dd>full original request URI (with arguments)</dd><dt id=\"var_scheme\"><code>$scheme</code></dt><dd>request scheme, “<code>http</code>” or “<code>https</code>”</dd><dt id=\"var_sent_http_\"><code>$sent_http_</code><code>name</code></dt><dd>arbitrary response header field; the last part of a variable name is the field name converted to lower case with dashes replaced by underscores</dd><dt id=\"var_sent_trailer_\"><code>$sent_trailer_</code><code>name</code></dt><dd>arbitrary field sent at the end of the response (1.13.2); the last part of a variable name is the field name converted to lower case with dashes replaced by underscores</dd><dt id=\"var_server_addr\"><code>$server_addr</code></dt><dd>an address of the server which accepted a request<p>Computing a value of this variable usually requires one system call. To avoid a system call, the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#listen\">listen</a> directives must specify addresses and use the <code>bind</code> parameter.</p></dd><dt id=\"var_server_name\"><code>$server_name</code></dt><dd>name of the server which accepted a request</dd><dt id=\"var_server_port\"><code>$server_port</code></dt><dd>port of the server which accepted a request</dd><dt id=\"var_server_protocol\"><code>$server_protocol</code></dt><dd>request protocol, usually “<code>HTTP/1.0</code>”, “<code>HTTP/1.1</code>”, “<a href=\"https://nginx.org/en/docs/http/ngx_http_v2_module.html\">HTTP/2.0</a>”, or “<a href=\"https://nginx.org/en/docs/http/ngx_http_v3_module.html\">HTTP/3.0</a>”</dd><dt id=\"var_status\"><code>$status</code></dt><dd>response status (1.3.2, 1.2.2)</dd><dt id=\"var_tcpinfo_\"><code>$tcpinfo_rtt</code>, <code>$tcpinfo_rttvar</code>, <code>$tcpinfo_snd_cwnd</code>, <code>$tcpinfo_rcv_space</code></dt><dd>information about the client TCP connection; available on systems that support the <code>TCP_INFO</code> socket option</dd><dt id=\"var_time_iso8601\"><code>$time_iso8601</code></dt><dd>local time in the ISO 8601 standard format (1.3.12, 1.2.7)</dd><dt id=\"var_time_local\"><code>$time_local</code></dt><dd>local time in the Common Log Format (1.3.12, 1.2.7)</dd><dt id=\"var_uri\"><code>$uri</code></dt><dd>current URI in request, <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#location\">normalized</a><p>The value of <code>$uri</code> may change during request processing, e.g. when doing internal redirects, or when using index files.</p></dd></dl>"]
]