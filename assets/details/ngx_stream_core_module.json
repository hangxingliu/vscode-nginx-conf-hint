[
[4,"listen","Sets the `address` and `port` for the socket on which the server will accept connections. It is possible to specify just the port. The address can also be a hostname, for example:","<p>Sets the <code>address</code> and <code>port</code> for the socket on which the server will accept connections. It is possible to specify just the port. The address can also be a hostname, for example:</p><blockquote class=\"example\"><pre>listen 127.0.0.1:12345;\nlisten *:12345;\nlisten 12345;     # same as *:12345\nlisten localhost:12345;\n</pre></blockquote><p>IPv6 addresses are specified in square brackets:</p><blockquote class=\"example\"><pre>listen [::1]:12345;\nlisten [::]:12345;\n</pre></blockquote><p>UNIX-domain sockets are specified with the “<code>unix:</code>” prefix:</p><blockquote class=\"example\"><pre>listen unix:/var/run/nginx.sock;\n</pre></blockquote>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>listen</strong> <code>address</code>:<code>port</code> [<code>ssl</code>] [<code>udp</code>] [<code>proxy_protocol</code>] [<code>fastopen</code>=<code>number</code>] [<code>backlog</code>=<code>number</code>] [<code>rcvbuf</code>=<code>size</code>] [<code>sndbuf</code>=<code>size</code>] [<code>bind</code>] [<code>ipv6only</code>=<code>on</code>|<code>off</code>] [<code>reuseport</code>] [<code>so_keepalive</code>=<code>on</code>|<code>off</code>|[<code>keepidle</code>]:[<code>keepintvl</code>]:[<code>keepcnt</code>]];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>"],
[4,"preread_buffer_size","Specifies a `size` of the [preread](https://nginx.org/en/docs/stream/stream_processing.html#preread_phase) buffer.","<p>Specifies a <code>size</code> of the <a href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\">preread</a> buffer.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>preread_buffer_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>preread_buffer_size 16k;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.5.</p>"],
[4,"preread_timeout","Specifies a `timeout` of the [preread](https://nginx.org/en/docs/stream/stream_processing.html#preread_phase) phase.","<p>Specifies a <code>timeout</code> of the <a href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\">preread</a> phase.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>preread_timeout</strong> <code>timeout</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>preread_timeout 30s;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.5.</p>"],
[4,"proxy_protocol_timeout","Specifies a `timeout` for reading the PROXY protocol header to complete. If no entire header is transmitted within this time, the connection is closed.","<p>Specifies a <code>timeout</code> for reading the PROXY protocol header to complete. If no entire header is transmitted within this time, the connection is closed.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_protocol_timeout</strong> <code>timeout</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_protocol_timeout 30s;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.4.</p>"],
[4,"resolver","Configures name servers used to resolve names of upstream servers into addresses, for example:","<p>Configures name servers used to resolve names of upstream servers into addresses, for example:</p><blockquote class=\"example\"><pre>resolver 127.0.0.1 [::1]:5353;\n</pre></blockquote><p>The address can be specified as a domain name or IP address, with an optional port. If port is not specified, the port 53 is used. Name servers are queried in a round-robin fashion.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>resolver</strong> <code>address</code> ... [<code>valid</code>=<code>time</code>] [<code>ipv4</code>=<code>on</code>|<code>off</code>] [<code>ipv6</code>=<code>on</code>|<code>off</code>] [<code>status_zone</code>=<code>zone</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.3.</p>"],
[4,"resolver_timeout","Sets a timeout for name resolution, for example:","<p>Sets a timeout for name resolution, for example:</p><blockquote class=\"example\"><pre>resolver_timeout 5s;\n</pre></blockquote><blockquote class=\"note\">Before version 1.11.3, this directive was available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",["Before version 1.11.3, this directive was available as part of our [commercial subscription](http://nginx.com/products/)."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>resolver_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>resolver_timeout 30s;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.3.</p>"],
[4,"server","Sets the configuration for a server.","<p>Sets the configuration for a server.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>server</strong> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>"],
[4,"stream","Provides the configuration file context in which the stream server directives are specified.","<p>Provides the configuration file context in which the stream server directives are specified.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>stream</strong> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>"],
[4,"tcp_nodelay","Enables or disables the use of the `TCP_NODELAY` option. The option is enabled for both client and proxied server connections.","<p>Enables or disables the use of the <code>TCP_NODELAY</code> option. The option is enabled for both client and proxied server connections.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>tcp_nodelay</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>tcp_nodelay on;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.4.</p>"],
[4,"variables_hash_bucket_size","Sets the bucket size for the variables hash table. The details of setting up hash tables are provided in a separate [document](https://nginx.org/en/docs/hash.html).","<p>Sets the bucket size for the variables hash table. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>variables_hash_bucket_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>variables_hash_bucket_size 64;</pre></td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.2.</p>"],
[4,"variables_hash_max_size","Sets the maximum `size` of the variables hash table. The details of setting up hash tables are provided in a separate [document](https://nginx.org/en/docs/hash.html).","<p>Sets the maximum <code>size</code> of the variables hash table. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>variables_hash_max_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>variables_hash_max_size 1024;</pre></td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.2.</p>"],
[5,"<p>The <code>ngx_stream_core_module</code> module supports variables since 1.11.2.</p><dl class=\"compact\"><dt id=\"var_binary_remote_addr\"><code>$binary_remote_addr</code></dt><dd>client address in a binary form, value’s length is always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses</dd><dt id=\"var_bytes_received\"><code>$bytes_received</code></dt><dd>number of bytes received from a client (1.11.4)</dd><dt id=\"var_bytes_sent\"><code>$bytes_sent</code></dt><dd>number of bytes sent to a client</dd><dt id=\"var_connection\"><code>$connection</code></dt><dd>connection serial number</dd><dt id=\"var_hostname\"><code>$hostname</code></dt><dd>host name</dd><dt id=\"var_msec\"><code>$msec</code></dt><dd>current time in seconds with the milliseconds resolution</dd><dt id=\"var_nginx_version\"><code>$nginx_version</code></dt><dd>nginx version</dd><dt id=\"var_pid\"><code>$pid</code></dt><dd>PID of the worker process</dd><dt id=\"var_protocol\"><code>$protocol</code></dt><dd>protocol used to communicate with the client: <code>TCP</code> or <code>UDP</code> (1.11.4)</dd><dt id=\"var_proxy_protocol_addr\"><code>$proxy_protocol_addr</code></dt><dd>client address from the PROXY protocol header (1.11.4)<p>The PROXY protocol must be previously enabled by setting the <code>proxy_protocol</code> parameter in the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#listen\">listen</a> directive.</p></dd><dt id=\"var_proxy_protocol_port\"><code>$proxy_protocol_port</code></dt><dd>client port from the PROXY protocol header (1.11.4)<p>The PROXY protocol must be previously enabled by setting the <code>proxy_protocol</code> parameter in the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#listen\">listen</a> directive.</p></dd><dt id=\"var_proxy_protocol_server_addr\"><code>$proxy_protocol_server_addr</code></dt><dd>server address from the PROXY protocol header (1.17.6)<p>The PROXY protocol must be previously enabled by setting the <code>proxy_protocol</code> parameter in the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#listen\">listen</a> directive.</p></dd><dt id=\"var_proxy_protocol_server_port\"><code>$proxy_protocol_server_port</code></dt><dd>server port from the PROXY protocol header (1.17.6)<p>The PROXY protocol must be previously enabled by setting the <code>proxy_protocol</code> parameter in the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#listen\">listen</a> directive.</p></dd><dt id=\"var_proxy_protocol_tlv_\"><code>$proxy_protocol_tlv_</code><code>name</code></dt><dd>TLV from the PROXY Protocol header (1.23.2). The <code>name</code> can be a TLV type name or its numeric value. In the latter case, the value is hexadecimal and should be prefixed with <code>0x</code>:<blockquote class=\"example\"><pre>$proxy_protocol_tlv_alpn\n$proxy_protocol_tlv_0x01\n</pre></blockquote>SSL TLVs can also be accessed by TLV type name or its numeric value, both prefixed by <code>ssl_</code>:<blockquote class=\"example\"><pre>$proxy_protocol_tlv_ssl_version\n$proxy_protocol_tlv_ssl_0x21\n</pre></blockquote><p>The following TLV type names are supported:</p><ul class=\"compact\"><li><code>alpn</code> (<code>0x01</code>)&nbsp;- upper layer protocol used over the connection</li><li><code>authority</code> (<code>0x02</code>)&nbsp;- host name value passed by the client</li><li><code>unique_id</code> (<code>0x05</code>)&nbsp;- unique connection id</li><li><code>netns</code> (<code>0x30</code>)&nbsp;- name of the namespace</li><li><code>ssl</code> (<code>0x20</code>)&nbsp;- binary SSL TLV structure</li></ul><p></p><p>The following SSL TLV type names are supported:</p><ul class=\"compact\"><li><code>ssl_version</code> (<code>0x21</code>)&nbsp;- SSL version used in client connection</li><li><code>ssl_cn</code> (<code>0x22</code>)&nbsp;- SSL certificate Common Name</li><li><code>ssl_cipher</code> (<code>0x23</code>)&nbsp;- name of the used cipher</li><li><code>ssl_sig_alg</code> (<code>0x24</code>)&nbsp;- algorithm used to sign the certificate</li><li><code>ssl_key_alg</code> (<code>0x25</code>)&nbsp;- public-key algorithm</li></ul><p></p><p>Also, the following special SSL TLV type name is supported:</p><ul class=\"compact\"><li><code>ssl_verify</code>&nbsp;- client SSL certificate verification result, zero if the client presented a certificate and it was successfully verified, and non-zero otherwise</li></ul><p></p><p>The PROXY protocol must be previously enabled by setting the <code>proxy_protocol</code> parameter in the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#listen\">listen</a> directive.</p></dd><dt id=\"var_remote_addr\"><code>$remote_addr</code></dt><dd>client address</dd><dt id=\"var_remote_port\"><code>$remote_port</code></dt><dd>client port</dd><dt id=\"var_server_addr\"><code>$server_addr</code></dt><dd>an address of the server which accepted a connection<p>Computing a value of this variable usually requires one system call. To avoid a system call, the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#listen\">listen</a> directives must specify addresses and use the <code>bind</code> parameter.</p></dd><dt id=\"var_server_port\"><code>$server_port</code></dt><dd>port of the server which accepted a connection</dd><dt id=\"var_session_time\"><code>$session_time</code></dt><dd>session duration in seconds with a milliseconds resolution (1.11.4);</dd><dt id=\"var_status\"><code>$status</code></dt><dd>session status (1.11.4), can be one of the following:<dl class=\"compact\"><dt><code>200</code></dt><dd>session completed successfully</dd><dt><code>400</code></dt><dd>client data could not be parsed, for example, the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#proxy_protocol\">PROXY protocol</a> header</dd><dt><code>403</code></dt><dd>access forbidden, for example, when access is limited for <a href=\"https://nginx.org/en/docs/stream/ngx_stream_access_module.html\">certain client addresses</a></dd><dt><code>500</code></dt><dd>internal server error</dd><dt><code>502</code></dt><dd>bad gateway, for example, if an upstream server could not be selected or reached.</dd><dt><code>503</code></dt><dd>service unavailable, for example, when access is limited by the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_limit_conn_module.html\">number of connections</a></dd></dl></dd><dt id=\"var_time_iso8601\"><code>$time_iso8601</code></dt><dd>local time in the ISO 8601 standard format</dd><dt id=\"var_time_local\"><code>$time_local</code></dt><dd>local time in the Common Log Format</dd></dl>"]
]