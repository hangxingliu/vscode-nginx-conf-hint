[
[4,"proxy_bind","Makes outgoing connections to a proxied server originate from the specified local IP address with an optional port (1.11.2). Parameter value can contain variables (1.3.12). The special value `off` (1.3.12) cancels the effect of the `proxy_bind` directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.","<p>Makes outgoing connections to a proxied server originate from the specified local IP address with an optional port (1.11.2). Parameter value can contain variables (1.3.12). The special value <code>off</code> (1.3.12) cancels the effect of the <code>proxy_bind</code> directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_bind</strong> <code>address</code> [<code>transparent</code>] | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.22.</p>"],
[4,"proxy_buffer_size","Sets the `size` of the buffer used for reading the first part of the response received from the proxied server. This part usually contains a small response header. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform. It can be made smaller, however.","<p>Sets the <code>size</code> of the buffer used for reading the first part of the response received from the proxied server. This part usually contains a small response header. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform. It can be made smaller, however.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_buffer_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_buffer_size 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_buffering","Enables or disables buffering of responses from the proxied server.","<p>Enables or disables buffering of responses from the proxied server.</p><p>When buffering is enabled, nginx receives a response from the proxied server as soon as possible, saving it into the buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers\">proxy_buffers</a> directives. If the whole response does not fit into memory, a part of it can be saved to a <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_path\">temporary file</a> on the disk. Writing to temporary files is controlled by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_max_temp_file_size\">proxy_max_temp_file_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_file_write_size\">proxy_temp_file_write_size</a> directives.</p><p>When buffering is disabled, the response is passed to a client synchronously, immediately as it is received. nginx will not try to read the whole response from the proxied server. The maximum size of the data that nginx can receive from the server at a time is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\">proxy_buffer_size</a> directive.</p><p>Buffering can also be enabled or disabled by passing “<code>yes</code>” or “<code>no</code>” in the “X-Accel-Buffering” response header field. This capability can be disabled using the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers\">proxy_ignore_headers</a> directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_buffering</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_buffering on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_buffers","Sets the `number` and `size` of the buffers used for reading a response from the proxied server, for a single connection. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.","<p>Sets the <code>number</code> and <code>size</code> of the buffers used for reading a response from the proxied server, for a single connection. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_buffers</strong> <code>number</code> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_buffers 8 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_busy_buffers_size","When [buffering](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering) of responses from the proxied server is enabled, limits the total `size` of buffers that can be busy sending a response to the client while the response is not yet fully read. In the meantime, the rest of the buffers can be used for reading the response and, if needed, buffering part of the response to a temporary file. By default, `size` is limited by the size of two buffers set by the [proxy\\_buffer\\_size](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size) and [proxy\\_buffers](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers) directives.","<p>When <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering\">buffering</a> of responses from the proxied server is enabled, limits the total <code>size</code> of buffers that can be busy sending a response to the client while the response is not yet fully read. In the meantime, the rest of the buffers can be used for reading the response and, if needed, buffering part of the response to a temporary file. By default, <code>size</code> is limited by the size of two buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers\">proxy_buffers</a> directives.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_busy_buffers_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_busy_buffers_size 8k|16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_cache","Defines a shared memory zone used for caching. The same zone can be used in several places. Parameter value can contain variables (1.7.9). The `off` parameter disables caching inherited from the previous configuration level.","<p>Defines a shared memory zone used for caching. The same zone can be used in several places. Parameter value can contain variables (1.7.9). The <code>off</code> parameter disables caching inherited from the previous configuration level.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache</strong> <code>zone</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_cache_background_update","Allows starting a background subrequest to update an expired cache item, while a stale cached response is returned to the client. Note that it is necessary to [allow](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_use_stale_updating) the usage of a stale cached response when it is being updated.","<p>Allows starting a background subrequest to update an expired cache item, while a stale cached response is returned to the client. Note that it is necessary to <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_use_stale_updating\">allow</a> the usage of a stale cached response when it is being updated.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_background_update</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_background_update off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.10.</p>"],
[4,"proxy_cache_bypass","Defines conditions under which the response will not be taken from a cache. If at least one value of the string parameters is not empty and is not equal to “0” then the response will not be taken from the cache:","<p>Defines conditions under which the response will not be taken from a cache. If at least one value of the string parameters is not empty and is not equal to “0” then the response will not be taken from the cache:</p><blockquote class=\"example\"><pre>proxy_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nproxy_cache_bypass $http_pragma    $http_authorization;\n</pre></blockquote><p>Can be used along with the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_no_cache\">proxy_no_cache</a> directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_bypass</strong> <code>string</code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_cache_convert_head","Enables or disables the conversion of the “`HEAD`” method to “`GET`” for caching. When the conversion is disabled, the [cache key](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key) should be configured to include the `$request_method`.","<p>Enables or disables the conversion of the “<code>HEAD</code>” method to “<code>GET</code>” for caching. When the conversion is disabled, the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\">cache key</a> should be configured to include the <code>$request_method</code>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_convert_head</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_convert_head on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.7.</p>"],
[4,"proxy_cache_key","Defines a key for caching, for example","<p>Defines a key for caching, for example</p><blockquote class=\"example\"><pre>proxy_cache_key \"$host$request_uri $cookie_user\";\n</pre></blockquote><p>By default, the directive’s value is close to the string</p><blockquote class=\"example\"><pre>proxy_cache_key $scheme$proxy_host$uri$is_args$args;\n</pre></blockquote>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_key</strong> <code>string</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_key $scheme$proxy_host$request_uri;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_cache_lock","When enabled, only one request at a time will be allowed to populate a new cache element identified according to the [proxy\\_cache\\_key](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key) directive by passing a request to a proxied server. Other requests of the same cache element will either wait for a response to appear in the cache or the cache lock for this element to be released, up to the time set by the [proxy\\_cache\\_lock\\_timeout](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock_timeout) directive.","<p>When enabled, only one request at a time will be allowed to populate a new cache element identified according to the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\">proxy_cache_key</a> directive by passing a request to a proxied server. Other requests of the same cache element will either wait for a response to appear in the cache or the cache lock for this element to be released, up to the time set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock_timeout\">proxy_cache_lock_timeout</a> directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_lock</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_lock off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.12.</p>"],
[4,"proxy_cache_lock_age","If the last request passed to the proxied server for populating a new cache element has not completed for the specified `time`, one more request may be passed to the proxied server.","<p>If the last request passed to the proxied server for populating a new cache element has not completed for the specified <code>time</code>, one more request may be passed to the proxied server.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_lock_age</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_lock_age 5s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.8.</p>"],
[4,"proxy_cache_lock_timeout","Sets a timeout for [proxy\\_cache\\_lock](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock). When the `time` expires, the request will be passed to the proxied server, however, the response will not be cached.","<p>Sets a timeout for <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock\">proxy_cache_lock</a>. When the <code>time</code> expires, the request will be passed to the proxied server, however, the response will not be cached.</p><blockquote class=\"note\">Before 1.7.8, the response could be cached.</blockquote>",["Before 1.7.8, the response could be cached."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_lock_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_lock_timeout 5s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.12.</p>"],
[4,"proxy_cache_max_range_offset","Sets an offset in bytes for byte-range requests. If the range is beyond the offset, the range request will be passed to the proxied server and the response will not be cached.","<p>Sets an offset in bytes for byte-range requests. If the range is beyond the offset, the range request will be passed to the proxied server and the response will not be cached.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_max_range_offset</strong> <code>number</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.6.</p>"],
[4,"proxy_cache_methods","If the client request method is listed in this directive then the response will be cached. “`GET`” and “`HEAD`” methods are always added to the list, though it is recommended to specify them explicitly. See also the [proxy\\_no\\_cache](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_no_cache) directive.","<p>If the client request method is listed in this directive then the response will be cached. “<code>GET</code>” and “<code>HEAD</code>” methods are always added to the list, though it is recommended to specify them explicitly. See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_no_cache\">proxy_no_cache</a> directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_methods</strong> <code>GET</code> | <code>HEAD</code> | <code>POST</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_methods GET HEAD;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.59.</p>"],
[4,"proxy_cache_min_uses","Sets the `number` of requests after which the response will be cached.","<p>Sets the <code>number</code> of requests after which the response will be cached.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_min_uses</strong> <code>number</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_min_uses 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_cache_path","Sets the path and other parameters of a cache. Cache data are stored in files. The file name in a cache is a result of applying the MD5 function to the [cache key](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key). The `levels` parameter defines hierarchy levels of a cache: from 1 to 3, each level accepts values 1 or 2. For example, in the following configuration","<p>Sets the path and other parameters of a cache. Cache data are stored in files. The file name in a cache is a result of applying the MD5 function to the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\">cache key</a>. The <code>levels</code> parameter defines hierarchy levels of a cache: from 1 to 3, each level accepts values 1 or 2. For example, in the following configuration</p><blockquote class=\"example\"><pre>proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n</pre></blockquote><p>file names in a cache will look like this:</p><blockquote class=\"example\"><pre>/data/nginx/cache/<strong>c</strong>/<strong>29</strong>/b7f54b2df7773722d382f4809d650<strong>29c</strong>\n</pre></blockquote><p>A cached response is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the cache can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both cache and a directory holding temporary files are put on the same file system. The directory for temporary files is set based on the <code>use_temp_path</code> parameter (1.7.10). If this parameter is omitted or set to the value <code>on</code>, the directory set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_path\">proxy_temp_path</a> directive for the given location will be used. If the value is set to <code>off</code>, temporary files will be put directly in the cache directory.</p><p>In addition, all active keys and information about data are stored in a shared memory zone, whose <code>name</code> and <code>size</code> are configured by the <code>keys_zone</code> parameter. One megabyte zone can store about 8 thousand keys.</p><blockquote class=\"note\">As part of <a href=\"https://www.f5.com/products\">commercial subscription</a>, the shared memory zone also stores extended cache <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_caches_\">information</a>, thus, it is required to specify a larger zone size for the same number of keys. For example, one megabyte zone can store about 4 thousand keys.</blockquote><p>Cached data that are not accessed during the time specified by the <code>inactive</code> parameter get removed from the cache regardless of their freshness. By default, <code>inactive</code> is set to 10 minutes.</p>",["As part of [commercial subscription](https://www.f5.com/products), the shared memory zone also stores extended cache [information](https://nginx.org/en/docs/http/ngx_http_api_module.html#http_caches_), thus, it is required to specify a larger zone size for the same number of keys. For example, one megabyte zone can store about 4 thousand keys."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_path</strong> <code>path</code> [<code>levels</code>=<code>levels</code>] [<code>use_temp_path</code>=<code>on</code>|<code>off</code>] <code>keys_zone</code>=<code>name</code>:<code>size</code> [<code>inactive</code>=<code>time</code>] [<code>max_size</code>=<code>size</code>] [<code>min_free</code>=<code>size</code>] [<code>manager_files</code>=<code>number</code>] [<code>manager_sleep</code>=<code>time</code>] [<code>manager_threshold</code>=<code>time</code>] [<code>loader_files</code>=<code>number</code>] [<code>loader_sleep</code>=<code>time</code>] [<code>loader_threshold</code>=<code>time</code>] [<code>purger</code>=<code>on</code>|<code>off</code>] [<code>purger_files</code>=<code>number</code>] [<code>purger_sleep</code>=<code>time</code>] [<code>purger_threshold</code>=<code>time</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>"],
[4,"proxy_cache_purge","Defines conditions under which the request will be considered a cache purge request. If at least one value of the string parameters is not empty and is not equal to “0” then the cache entry with a corresponding [cache key](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key) is removed. The result of successful operation is indicated by returning the 204 (No Content) response.","<p>Defines conditions under which the request will be considered a cache purge request. If at least one value of the string parameters is not empty and is not equal to “0” then the cache entry with a corresponding <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\">cache key</a> is removed. The result of successful operation is indicated by returning the 204 (No Content) response.</p><p>If the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\">cache key</a> of a purge request ends with an asterisk (“<code>*</code>”), all cache entries matching the wildcard key will be removed from the cache. However, these entries will remain on the disk until they are deleted for either <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path\">inactivity</a>, or processed by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#purger\">cache purger</a> (1.7.12), or a client attempts to access them.</p><p>Example configuration:</p><blockquote class=\"example\"><pre>proxy_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        proxy_pass http://backend;\n        proxy_cache cache_zone;\n        proxy_cache_key $uri;\n        proxy_cache_purge $purge_method;\n    }\n}\n</pre></blockquote><blockquote class=\"note\">This functionality is available as part of our <a href=\"https://www.f5.com/products\">commercial subscription</a>.</blockquote>",["This functionality is available as part of our [commercial subscription](https://www.f5.com/products)."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_purge</strong> string ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.7.</p>"],
[4,"proxy_cache_revalidate","Enables revalidation of expired cache items using conditional requests with the “If-Modified-Since” and “If-None-Match” header fields.","<p>Enables revalidation of expired cache items using conditional requests with the “If-Modified-Since” and “If-None-Match” header fields.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_revalidate</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_revalidate off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.7.</p>"],
[4,"proxy_cache_use_stale","Determines in which cases a stale cached response can be used during communication with the proxied server. The directive’s parameters match the parameters of the [proxy\\_next\\_upstream](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream) directive.","<p>Determines in which cases a stale cached response can be used during communication with the proxied server. The directive’s parameters match the parameters of the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\">proxy_next_upstream</a> directive.</p><p>The <code>error</code> parameter also permits using a stale cached response if a proxied server to process a request cannot be selected.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_use_stale</strong> <code>error</code> | <code>timeout</code> | <code>invalid_header</code> | <code>updating</code> | <code>http_500</code> | <code>http_502</code> | <code>http_503</code> | <code>http_504</code> | <code>http_403</code> | <code>http_404</code> | <code>http_429</code> | <code>off</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_use_stale off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_cache_valid","Sets caching time for different response codes. For example, the following directives","<p>Sets caching time for different response codes. For example, the following directives</p><blockquote class=\"example\"><pre>proxy_cache_valid 200 302 10m;\nproxy_cache_valid 404      1m;\n</pre></blockquote><p>set 10 minutes of caching for responses with codes 200 and 302 and 1 minute for responses with code 404.</p><p>If only caching <code>time</code> is specified</p><blockquote class=\"example\"><pre>proxy_cache_valid 5m;\n</pre></blockquote><p>then only 200, 301, and 302 responses are cached.</p><p>In addition, the <code>any</code> parameter can be specified to cache any responses:</p><blockquote class=\"example\"><pre>proxy_cache_valid 200 302 10m;\nproxy_cache_valid 301      1h;\nproxy_cache_valid any      1m;\n</pre></blockquote><p>Parameters of caching can also be set directly in the response header. This has higher priority than setting of caching time using the directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_valid</strong> [<code>code</code> ...] <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_connect_timeout","Defines a timeout for establishing a connection with a proxied server. It should be noted that this timeout cannot usually exceed 75 seconds.","<p>Defines a timeout for establishing a connection with a proxied server. It should be noted that this timeout cannot usually exceed 75 seconds.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_connect_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_connect_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_cookie_domain","Sets a text that should be changed in the `domain` attribute of the “Set-Cookie” header fields of a proxied server response. Suppose a proxied server returned the “Set-Cookie” header field with the attribute “`domain=localhost`”. The directive","<p>Sets a text that should be changed in the <code>domain</code> attribute of the “Set-Cookie” header fields of a proxied server response. Suppose a proxied server returned the “Set-Cookie” header field with the attribute “<code>domain=localhost</code>”. The directive</p><blockquote class=\"example\"><pre>proxy_cookie_domain localhost example.org;\n</pre></blockquote><p>will rewrite this attribute to “<code>domain=example.org</code>”.</p><p>A dot at the beginning of the <code>domain</code> and <code>replacement</code> strings and the <code>domain</code> attribute is ignored. Matching is case-insensitive.</p><p>The <code>domain</code> and <code>replacement</code> strings can contain variables:</p><blockquote class=\"example\"><pre>proxy_cookie_domain www.$host $host;\n</pre></blockquote><p>The directive can also be specified using regular expressions. In this case, <code>domain</code> should start from the “<code>~</code>” symbol. A regular expression can contain named and positional captures, and <code>replacement</code> can reference them:</p><blockquote class=\"example\"><pre>proxy_cookie_domain ~\\.(?P&lt;sl_domain&gt;[-0-9a-z]+\\.[a-z]+)$ $sl_domain;\n</pre></blockquote><p>Several <code>proxy_cookie_domain</code> directives can be specified on the same level:</p><blockquote class=\"example\"><pre>proxy_cookie_domain localhost example.org;\nproxy_cookie_domain ~\\.([a-z]+\\.[a-z]+)$ $1;\n</pre></blockquote><p>If several directives can be applied to the cookie, the first matching directive will be chosen.</p><p>The <code>off</code> parameter cancels the effect of the <code>proxy_cookie_domain</code> directives inherited from the previous configuration level.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cookie_domain</strong> <code>off</code>;</code><br><code><strong>proxy_cookie_domain</strong> <code>domain</code> <code>replacement</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cookie_domain off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.15.</p>"],
[4,"proxy_cookie_flags","Sets one or more flags for the cookie. The `cookie` can contain text, variables, and their combinations. The `flag` can contain text, variables, and their combinations (1.19.8). The `secure`, `httponly`, `samesite=strict`, `samesite=lax`, `samesite=none` parameters add the corresponding flags. The `nosecure`, `nohttponly`, `nosamesite` parameters remove the corresponding flags.","<p>Sets one or more flags for the cookie. The <code>cookie</code> can contain text, variables, and their combinations. The <code>flag</code> can contain text, variables, and their combinations (1.19.8). The <code>secure</code>, <code>httponly</code>, <code>samesite=strict</code>, <code>samesite=lax</code>, <code>samesite=none</code> parameters add the corresponding flags. The <code>nosecure</code>, <code>nohttponly</code>, <code>nosamesite</code> parameters remove the corresponding flags.</p><p>The cookie can also be specified using regular expressions. In this case, <code>cookie</code> should start from the “<code>~</code>” symbol.</p><p>Several <code>proxy_cookie_flags</code> directives can be specified on the same configuration level:</p><blockquote class=\"example\"><pre>proxy_cookie_flags one httponly;\nproxy_cookie_flags ~ nosecure samesite=strict;\n</pre></blockquote><p>If several directives can be applied to the cookie, the first matching directive will be chosen. In the example, the <code>httponly</code> flag is added to the cookie <code>one</code>, for all other cookies the <code>samesite=strict</code> flag is added and the <code>secure</code> flag is deleted.</p><p>The <code>off</code> parameter cancels the effect of the <code>proxy_cookie_flags</code> directives inherited from the previous configuration level.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cookie_flags</strong> <code>off</code> | <code>cookie</code> [<code>flag</code> ...];</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cookie_flags off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.3.</p>"],
[4,"proxy_cookie_path","Sets a text that should be changed in the `path` attribute of the “Set-Cookie” header fields of a proxied server response. Suppose a proxied server returned the “Set-Cookie” header field with the attribute “`path=/two/some/uri/`”. The directive","<p>Sets a text that should be changed in the <code>path</code> attribute of the “Set-Cookie” header fields of a proxied server response. Suppose a proxied server returned the “Set-Cookie” header field with the attribute “<code>path=/two/some/uri/</code>”. The directive</p><blockquote class=\"example\"><pre>proxy_cookie_path /two/ /;\n</pre></blockquote><p>will rewrite this attribute to “<code>path=/some/uri/</code>”.</p><p>The <code>path</code> and <code>replacement</code> strings can contain variables:</p><blockquote class=\"example\"><pre>proxy_cookie_path $uri /some$uri;\n</pre></blockquote><p>The directive can also be specified using regular expressions. In this case, <code>path</code> should either start from the “<code>~</code>” symbol for a case-sensitive matching, or from the “<code>~*</code>” symbols for case-insensitive matching. The regular expression can contain named and positional captures, and <code>replacement</code> can reference them:</p><blockquote class=\"example\"><pre>proxy_cookie_path ~*^/user/([^/]+) /u/$1;\n</pre></blockquote><p>Several <code>proxy_cookie_path</code> directives can be specified on the same level:</p><blockquote class=\"example\"><pre>proxy_cookie_path /one/ /;\nproxy_cookie_path / /two/;\n</pre></blockquote><p>If several directives can be applied to the cookie, the first matching directive will be chosen.</p><p>The <code>off</code> parameter cancels the effect of the <code>proxy_cookie_path</code> directives inherited from the previous configuration level.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cookie_path</strong> <code>off</code>;</code><br><code><strong>proxy_cookie_path</strong> <code>path</code> <code>replacement</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cookie_path off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.15.</p>"],
[4,"proxy_force_ranges","Enables byte-range support for both cached and uncached responses from the proxied server regardless of the “Accept-Ranges” field in these responses.","<p>Enables byte-range support for both cached and uncached responses from the proxied server regardless of the “Accept-Ranges” field in these responses.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_force_ranges</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_force_ranges off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.7.</p>"],
[4,"proxy_headers_hash_bucket_size","Sets the bucket `size` for hash tables used by the [proxy\\_hide\\_header](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header) and [proxy\\_set\\_header](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header) directives. The details of setting up hash tables are provided in a separate [document](https://nginx.org/en/docs/hash.html).","<p>Sets the bucket <code>size</code> for hash tables used by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header\">proxy_hide_header</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\">proxy_set_header</a> directives. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_headers_hash_bucket_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_headers_hash_bucket_size 64;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_headers_hash_max_size","Sets the maximum `size` of hash tables used by the [proxy\\_hide\\_header](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header) and [proxy\\_set\\_header](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header) directives. The details of setting up hash tables are provided in a separate [document](https://nginx.org/en/docs/hash.html).","<p>Sets the maximum <code>size</code> of hash tables used by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header\">proxy_hide_header</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\">proxy_set_header</a> directives. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_headers_hash_max_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_headers_hash_max_size 512;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_hide_header","By default, nginx does not pass the header fields “Date”, “Server”, “X-Pad”, and “X-Accel-...” from the response of a proxied server to a client. The `proxy_hide_header` directive sets additional fields that will not be passed. If, on the contrary, the passing of fields needs to be permitted, the [proxy\\_pass\\_header](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_header) directive can be used.","<p>By default, nginx does not pass the header fields “Date”, “Server”, “X-Pad”, and “X-Accel-...” from the response of a proxied server to a client. The <code>proxy_hide_header</code> directive sets additional fields that will not be passed. If, on the contrary, the passing of fields needs to be permitted, the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_header\">proxy_pass_header</a> directive can be used.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_hide_header</strong> <code>field</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_http_version","Sets the HTTP protocol version for proxying. By default, version 1.0 is used. Version 1.1 is recommended for use with [keepalive](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive) connections and [NTLM authentication](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#ntlm).","<p>Sets the HTTP protocol version for proxying. By default, version 1.0 is used. Version 1.1 is recommended for use with <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive\">keepalive</a> connections and <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#ntlm\">NTLM authentication</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_http_version</strong> <code>1.0</code> | <code>1.1</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_http_version 1.0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.4.</p>"],
[4,"proxy_ignore_client_abort","Determines whether the connection with a proxied server should be closed when a client closes the connection without waiting for a response.","<p>Determines whether the connection with a proxied server should be closed when a client closes the connection without waiting for a response.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ignore_client_abort</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ignore_client_abort off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_ignore_headers","Disables processing of certain response header fields from the proxied server. The following fields can be ignored: “X-Accel-Redirect”, “X-Accel-Expires”, “X-Accel-Limit-Rate” (1.1.6), “X-Accel-Buffering” (1.1.6), “X-Accel-Charset” (1.1.6), “Expires”, “Cache-Control”, “Set-Cookie” (0.8.44), and “Vary” (1.7.7).","<p>Disables processing of certain response header fields from the proxied server. The following fields can be ignored: “X-Accel-Redirect”, “X-Accel-Expires”, “X-Accel-Limit-Rate” (1.1.6), “X-Accel-Buffering” (1.1.6), “X-Accel-Charset” (1.1.6), “Expires”, “Cache-Control”, “Set-Cookie” (0.8.44), and “Vary” (1.7.7).</p><p>If not disabled, processing of these header fields has the following effect:</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ignore_headers</strong> <code>field</code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_intercept_errors","Determines whether proxied responses with codes greater than or equal to 300 should be passed to a client or be intercepted and redirected to nginx for processing with the [error\\_page](https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page) directive.","<p>Determines whether proxied responses with codes greater than or equal to 300 should be passed to a client or be intercepted and redirected to nginx for processing with the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\">error_page</a> directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_intercept_errors</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_intercept_errors off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_limit_rate","Limits the speed of reading the response from the proxied server. The `rate` is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if nginx simultaneously opens two connections to the proxied server, the overall rate will be twice as much as the specified limit. The limitation works only if [buffering](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering) of responses from the proxied server is enabled. Parameter value can contain variables (1.27.0).","<p>Limits the speed of reading the response from the proxied server. The <code>rate</code> is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if nginx simultaneously opens two connections to the proxied server, the overall rate will be twice as much as the specified limit. The limitation works only if <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering\">buffering</a> of responses from the proxied server is enabled. Parameter value can contain variables (1.27.0).</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_limit_rate</strong> <code>rate</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_limit_rate 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.7.</p>"],
[4,"proxy_max_temp_file_size","When [buffering](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering) of responses from the proxied server is enabled, and the whole response does not fit into the buffers set by the [proxy\\_buffer\\_size](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size) and [proxy\\_buffers](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers) directives, a part of the response can be saved to a temporary file. This directive sets the maximum `size` of the temporary file. The size of data written to the temporary file at a time is set by the [proxy\\_temp\\_file\\_write\\_size](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_file_write_size) directive.","<p>When <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering\">buffering</a> of responses from the proxied server is enabled, and the whole response does not fit into the buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers\">proxy_buffers</a> directives, a part of the response can be saved to a temporary file. This directive sets the maximum <code>size</code> of the temporary file. The size of data written to the temporary file at a time is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_file_write_size\">proxy_temp_file_write_size</a> directive.</p><p>The zero value disables buffering of responses to temporary files.</p><blockquote class=\"note\">This restriction does not apply to responses that will be <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache\">cached</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_store\">stored</a> on disk.</blockquote>",["This restriction does not apply to responses that will be [cached](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache) or [stored](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_store) on disk."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_max_temp_file_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_max_temp_file_size 1024m;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_method","Specifies the HTTP `method` to use in requests forwarded to the proxied server instead of the method from the client request. Parameter value can contain variables (1.11.6).","<p>Specifies the HTTP <code>method</code> to use in requests forwarded to the proxied server instead of the method from the client request. Parameter value can contain variables (1.11.6).</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_method</strong> <code>method</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_next_upstream","Specifies in which cases a request should be passed to the next server:","<p>Specifies in which cases a request should be passed to the next server:</p><dl class=\"compact\"><dt><code>error</code></dt><dd>an error occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>timeout</code></dt><dd>a timeout has occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>invalid_header</code></dt><dd>a server returned an empty or invalid response;</dd><dt><code>http_500</code></dt><dd>a server returned a response with the code 500;</dd><dt><code>http_502</code></dt><dd>a server returned a response with the code 502;</dd><dt><code>http_503</code></dt><dd>a server returned a response with the code 503;</dd><dt><code>http_504</code></dt><dd>a server returned a response with the code 504;</dd><dt><code>http_403</code></dt><dd>a server returned a response with the code 403;</dd><dt><code>http_404</code></dt><dd>a server returned a response with the code 404;</dd><dt><code>http_429</code></dt><dd>a server returned a response with the code 429 (1.11.13);</dd><dt id=\"non_idempotent\"><code>non_idempotent</code></dt><dd>normally, requests with a <a href=\"https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2\">non-idempotent</a> method (<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>) are not passed to the next server if a request has been sent to an upstream server (1.9.13); enabling this option explicitly allows retrying such requests;</dd><dt><code>off</code></dt><dd>disables passing a request to the next server.</dd></dl><p>One should bear in mind that passing a request to the next server is only possible if nothing has been sent to a client yet. That is, if an error or timeout occurs in the middle of the transferring of a response, fixing this is impossible.</p><p>The directive also defines what is considered an <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\">unsuccessful attempt</a> of communication with a server. The cases of <code>error</code>, <code>timeout</code> and <code>invalid_header</code> are always considered unsuccessful attempts, even if they are not specified in the directive. The cases of <code>http_500</code>, <code>http_502</code>, <code>http_503</code>, <code>http_504</code>, and <code>http_429</code> are considered unsuccessful attempts only if they are specified in the directive. The cases of <code>http_403</code> and <code>http_404</code> are never considered unsuccessful attempts.</p><p>Passing a request to the next server can be limited by <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream_tries\">the number of tries</a> and by <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream_timeout\">time</a>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_next_upstream</strong> <code>error</code> | <code>timeout</code> | <code>invalid_header</code> | <code>http_500</code> | <code>http_502</code> | <code>http_503</code> | <code>http_504</code> | <code>http_403</code> | <code>http_404</code> | <code>http_429</code> | <code>non_idempotent</code> | <code>off</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_next_upstream error timeout;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_next_upstream_timeout","Limits the time during which a request can be passed to the [next server](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream). The `0` value turns off this limitation.","<p>Limits the time during which a request can be passed to the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_next_upstream_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_next_upstream_timeout 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.5.</p>"],
[4,"proxy_next_upstream_tries","Limits the number of possible tries for passing a request to the [next server](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream). The `0` value turns off this limitation.","<p>Limits the number of possible tries for passing a request to the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_next_upstream_tries</strong> <code>number</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_next_upstream_tries 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.5.</p>"],
[4,"proxy_no_cache","Defines conditions under which the response will not be saved to a cache. If at least one value of the string parameters is not empty and is not equal to “0” then the response will not be saved:","<p>Defines conditions under which the response will not be saved to a cache. If at least one value of the string parameters is not empty and is not equal to “0” then the response will not be saved:</p><blockquote class=\"example\"><pre>proxy_no_cache $cookie_nocache $arg_nocache$arg_comment;\nproxy_no_cache $http_pragma    $http_authorization;\n</pre></blockquote><p>Can be used along with the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_bypass\">proxy_cache_bypass</a> directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_no_cache</strong> <code>string</code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_pass","Sets the protocol and address of a proxied server and an optional URI to which a location should be mapped. As a protocol, “`http`” or “`https`” can be specified. The address can be specified as a domain name or IP address, and an optional port:","<p>Sets the protocol and address of a proxied server and an optional URI to which a location should be mapped. As a protocol, “<code>http</code>” or “<code>https</code>” can be specified. The address can be specified as a domain name or IP address, and an optional port:</p><blockquote class=\"example\"><pre>proxy_pass http://localhost:8000/uri/;\n</pre></blockquote><p>or as a UNIX-domain socket path specified after the word “<code>unix</code>” and enclosed in colons:</p><blockquote class=\"example\"><pre>proxy_pass http://unix:/tmp/backend.socket:/uri/;\n</pre></blockquote><p>If a domain name resolves to several addresses, all of them will be used in a round-robin fashion. In addition, an address can be specified as a <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\">server group</a>.</p><p>Parameter value can contain variables. In this case, if an address is specified as a domain name, the name is searched among the described server groups, and, if not found, is determined using a <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\">resolver</a>.</p><p>A request URI is passed to the server as follows:</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_pass</strong> <code>URL</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code>, <code>if in location</code>, <code>limit_except</code><br></td></tr></tbody></table>"],
[4,"proxy_pass_header","Permits passing [otherwise disabled](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header) header fields from a proxied server to a client.","<p>Permits passing <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header\">otherwise disabled</a> header fields from a proxied server to a client.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_pass_header</strong> <code>field</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_pass_request_body","Indicates whether the original request body is passed to the proxied server.","<p>Indicates whether the original request body is passed to the proxied server.</p><blockquote class=\"example\"><pre>location /x-accel-redirect-here/ {\n    proxy_method GET;\n    proxy_pass_request_body off;\n    proxy_set_header Content-Length \"\";\n\n    proxy_pass ...\n}\n</pre></blockquote><p>See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\">proxy_set_header</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_headers\">proxy_pass_request_headers</a> directives.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_pass_request_body</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_pass_request_body on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_pass_request_headers","Indicates whether the header fields of the original request are passed to the proxied server.","<p>Indicates whether the header fields of the original request are passed to the proxied server.</p><blockquote class=\"example\"><pre>location /x-accel-redirect-here/ {\n    proxy_method GET;\n    proxy_pass_request_headers off;\n    proxy_pass_request_body off;\n\n    proxy_pass ...\n}\n</pre></blockquote><p>See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\">proxy_set_header</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_body\">proxy_pass_request_body</a> directives.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_pass_request_headers</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_pass_request_headers on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_read_timeout","Defines a timeout for reading a response from the proxied server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the proxied server does not transmit anything within this time, the connection is closed.","<p>Defines a timeout for reading a response from the proxied server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the proxied server does not transmit anything within this time, the connection is closed.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_read_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_read_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_redirect","Sets the text that should be changed in the “Location” and “Refresh” header fields of a proxied server response. Suppose a proxied server returned the header field “`Location: http://localhost:8000/two/some/uri/`”. The directive","<p>Sets the text that should be changed in the “Location” and “Refresh” header fields of a proxied server response. Suppose a proxied server returned the header field “<code>Location: http://localhost:8000/two/some/uri/</code>”. The directive</p><blockquote class=\"example\"><pre>proxy_redirect http://localhost:8000/two/ http://frontend/one/;\n</pre></blockquote><p>will rewrite this string to “<code>Location: http://frontend/one/some/uri/</code>”.</p><p>A server name may be omitted in the <code>replacement</code> string:</p><blockquote class=\"example\"><pre>proxy_redirect http://localhost:8000/two/ /;\n</pre></blockquote><p>then the primary server’s name and port, if different from 80, will be inserted.</p><p>The default replacement specified by the <code>default</code> parameter uses the parameters of the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#location\">location</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\">proxy_pass</a> directives. Hence, the two configurations below are equivalent:</p><blockquote class=\"example\"><pre>location /one/ {\n    proxy_pass     http://upstream:port/two/;\n    proxy_redirect default;\n</pre></blockquote><blockquote class=\"example\"><pre>location /one/ {\n    proxy_pass     http://upstream:port/two/;\n    proxy_redirect http://upstream:port/two/ /one/;\n</pre></blockquote><p>The <code>default</code> parameter is not permitted if <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\">proxy_pass</a> is specified using variables.</p><p>A <code>replacement</code> string can contain variables:</p><blockquote class=\"example\"><pre>proxy_redirect http://localhost:8000/ http://$host:$server_port/;\n</pre></blockquote><p>A <code>redirect</code> can also contain (1.1.11) variables:</p><blockquote class=\"example\"><pre>proxy_redirect http://$proxy_host:8000/ /;\n</pre></blockquote><p>The directive can be specified (1.1.11) using regular expressions. In this case, <code>redirect</code> should either start with the “<code>~</code>” symbol for a case-sensitive matching, or with the “<code>~*</code>” symbols for case-insensitive matching. The regular expression can contain named and positional captures, and <code>replacement</code> can reference them:</p><blockquote class=\"example\"><pre>proxy_redirect ~^(http://[^:]+):\\d+(/.+)$ $1$2;\nproxy_redirect ~*/user/([^/]+)/(.+)$      http://$1.example.com/$2;\n</pre></blockquote><p>Several <code>proxy_redirect</code> directives can be specified on the same level:</p><blockquote class=\"example\"><pre>proxy_redirect default;\nproxy_redirect http://localhost:8000/  /;\nproxy_redirect http://www.example.com/ /;\n</pre></blockquote><p>If several directives can be applied to the header fields of a proxied server response, the first matching directive will be chosen.</p><p>The <code>off</code> parameter cancels the effect of the <code>proxy_redirect</code> directives inherited from the previous configuration level.</p><p>Using this directive, it is also possible to add host names to relative redirects issued by a proxied server:</p><blockquote class=\"example\"><pre>proxy_redirect / /;\n</pre></blockquote>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_redirect</strong> <code>default</code>;</code><br><code><strong>proxy_redirect</strong> <code>off</code>;</code><br><code><strong>proxy_redirect</strong> <code>redirect</code> <code>replacement</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_redirect default;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_request_buffering","Enables or disables buffering of a client request body.","<p>Enables or disables buffering of a client request body.</p><p>When buffering is enabled, the entire request body is <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size\">read</a> from the client before sending the request to a proxied server.</p><p>When buffering is disabled, the request body is sent to the proxied server immediately as it is received. In this case, the request cannot be passed to the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\">next server</a> if nginx already started sending the request body.</p><p>When HTTP/1.1 chunked transfer encoding is used to send the original request body, the request body will be buffered regardless of the directive value unless HTTP/1.1 is <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version\">enabled</a> for proxying.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_request_buffering</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_request_buffering on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.11.</p>"],
[4,"proxy_send_lowat","If the directive is set to a non-zero value, nginx will try to minimize the number of send operations on outgoing connections to a proxied server by using either `NOTE_LOWAT` flag of the [kqueue](https://nginx.org/en/docs/events.html#kqueue) method, or the `SO_SNDLOWAT` socket option, with the specified `size`.","<p>If the directive is set to a non-zero value, nginx will try to minimize the number of send operations on outgoing connections to a proxied server by using either <code>NOTE_LOWAT</code> flag of the <a href=\"https://nginx.org/en/docs/events.html#kqueue\">kqueue</a> method, or the <code>SO_SNDLOWAT</code> socket option, with the specified <code>size</code>.</p><p>This directive is ignored on Linux, Solaris, and Windows.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_send_lowat</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_send_lowat 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_send_timeout","Sets a timeout for transmitting a request to the proxied server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the proxied server does not receive anything within this time, the connection is closed.","<p>Sets a timeout for transmitting a request to the proxied server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the proxied server does not receive anything within this time, the connection is closed.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_send_timeout</strong> <code>time</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_send_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_set_body","Allows redefining the request body passed to the proxied server. The `value` can contain text, variables, and their combination.","<p>Allows redefining the request body passed to the proxied server. The <code>value</code> can contain text, variables, and their combination.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_set_body</strong> <code>value</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_set_header","Allows redefining or appending fields to the request header [passed](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_headers) to the proxied server. The `value` can contain text, variables, and their combinations. These directives are inherited from the previous configuration level if and only if there are no `proxy_set_header` directives defined on the current level. By default, only two fields are redefined:","<p>Allows redefining or appending fields to the request header <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_headers\">passed</a> to the proxied server. The <code>value</code> can contain text, variables, and their combinations. These directives are inherited from the previous configuration level if and only if there are no <code>proxy_set_header</code> directives defined on the current level. By default, only two fields are redefined:</p><blockquote class=\"example\"><pre>proxy_set_header Host       $proxy_host;\nproxy_set_header Connection close;\n</pre></blockquote><p>If caching is enabled, the header fields “If-Modified-Since”, “If-Unmodified-Since”, “If-None-Match”, “If-Match”, “Range”, and “If-Range” from the original request are not passed to the proxied server.</p><p>An unchanged “Host” request header field can be passed like this:</p><blockquote class=\"example\"><pre>proxy_set_header Host       $http_host;\n</pre></blockquote><p>However, if this field is not present in a client request header then nothing will be passed. In such a case it is better to use the <code>$host</code> variable&nbsp;- its value equals the server name in the “Host” request header field or the primary server name if this field is not present:</p><blockquote class=\"example\"><pre>proxy_set_header Host       $host;\n</pre></blockquote><p>In addition, the server name can be passed together with the port of the proxied server:</p><blockquote class=\"example\"><pre>proxy_set_header Host       $host:$proxy_port;\n</pre></blockquote><p>If the value of a header field is an empty string then this field will not be passed to a proxied server:</p><blockquote class=\"example\"><pre>proxy_set_header Accept-Encoding \"\";\n</pre></blockquote>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_set_header</strong> <code>field</code> <code>value</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_set_header Host $proxy_host;</pre><pre>proxy_set_header Connection close;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_socket_keepalive","Configures the “TCP keepalive” behavior for outgoing connections to a proxied server. By default, the operating system’s settings are in effect for the socket. If the directive is set to the value “`on`”, the `SO_KEEPALIVE` socket option is turned on for the socket.","<p>Configures the “TCP keepalive” behavior for outgoing connections to a proxied server. By default, the operating system’s settings are in effect for the socket. If the directive is set to the value “<code>on</code>”, the <code>SO_KEEPALIVE</code> socket option is turned on for the socket.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_socket_keepalive</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_socket_keepalive off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.6.</p>"],
[4,"proxy_ssl_certificate","Specifies a `file` with the certificate in the PEM format used for authentication to a proxied HTTPS server.","<p>Specifies a <code>file</code> with the certificate in the PEM format used for authentication to a proxied HTTPS server.</p><p>Since version 1.21.0, variables can be used in the <code>file</code> name.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_certificate</strong> <code>file</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.8.</p>"],
[4,"proxy_ssl_certificate_key","Specifies a `file` with the secret key in the PEM format used for authentication to a proxied HTTPS server.","<p>Specifies a <code>file</code> with the secret key in the PEM format used for authentication to a proxied HTTPS server.</p><p>The value <code>engine</code>:<code>name</code>:<code>id</code> can be specified instead of the <code>file</code> (1.7.9), which loads a secret key with a specified <code>id</code> from the OpenSSL engine <code>name</code>.</p><p>Since version 1.21.0, variables can be used in the <code>file</code> name.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_certificate_key</strong> <code>file</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.8.</p>"],
[4,"proxy_ssl_ciphers","Specifies the enabled ciphers for requests to a proxied HTTPS server. The ciphers are specified in the format understood by the OpenSSL library.","<p>Specifies the enabled ciphers for requests to a proxied HTTPS server. The ciphers are specified in the format understood by the OpenSSL library.</p><p>The full list can be viewed using the “<code>openssl ciphers</code>” command.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_ciphers</strong> <code>ciphers</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_ciphers DEFAULT;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.6.</p>"],
[4,"proxy_ssl_conf_command","Sets arbitrary OpenSSL configuration [commands](https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html) when establishing a connection with the proxied HTTPS server.","<p>Sets arbitrary OpenSSL configuration <a href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\">commands</a> when establishing a connection with the proxied HTTPS server.</p><blockquote class=\"note\">The directive is supported when using OpenSSL 1.0.2 or higher.</blockquote><p>Several <code>proxy_ssl_conf_command</code> directives can be specified on the same level. These directives are inherited from the previous configuration level if and only if there are no <code>proxy_ssl_conf_command</code> directives defined on the current level.</p><blockquote class=\"note\">Note that configuring OpenSSL directly might result in unexpected behavior.</blockquote>",["The directive is supported when using OpenSSL 1.0.2 or higher.","Note that configuring OpenSSL directly might result in unexpected behavior."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_conf_command</strong> <code>name</code> <code>value</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.4.</p>"],
[4,"proxy_ssl_crl","Specifies a `file` with revoked certificates (CRL) in the PEM format used to [verify](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify) the certificate of the proxied HTTPS server.","<p>Specifies a <code>file</code> with revoked certificates (CRL) in the PEM format used to <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify\">verify</a> the certificate of the proxied HTTPS server.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_crl</strong> <code>file</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>"],
[4,"proxy_ssl_name","Allows overriding the server name used to [verify](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify) the certificate of the proxied HTTPS server and to be [passed through SNI](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_server_name) when establishing a connection with the proxied HTTPS server.","<p>Allows overriding the server name used to <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify\">verify</a> the certificate of the proxied HTTPS server and to be <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_server_name\">passed through SNI</a> when establishing a connection with the proxied HTTPS server.</p><p>By default, the host part of the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\">proxy_pass</a> URL is used.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_name</strong> <code>name</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_name $proxy_host;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>"],
[4,"proxy_ssl_password_file","Specifies a `file` with passphrases for [secret keys](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_certificate_key) where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.","<p>Specifies a <code>file</code> with passphrases for <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_certificate_key\">secret keys</a> where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_password_file</strong> <code>file</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.8.</p>"],
[4,"proxy_ssl_protocols","Enables the specified protocols for requests to a proxied HTTPS server.","<p>Enables the specified protocols for requests to a proxied HTTPS server.</p><blockquote class=\"note\">The <code>TLSv1.3</code> parameter is used by default since 1.23.4.</blockquote>",["The `TLSv1.3` parameter is used by default since 1.23.4."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_protocols</strong> [<code>SSLv2</code>] [<code>SSLv3</code>] [<code>TLSv1</code>] [<code>TLSv1.1</code>] [<code>TLSv1.2</code>] [<code>TLSv1.3</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.6.</p>"],
[4,"proxy_ssl_server_name","Enables or disables passing of the server name through [TLS Server Name Indication extension](http://en.wikipedia.org/wiki/Server_Name_Indication) (SNI, RFC 6066) when establishing a connection with the proxied HTTPS server.","<p>Enables or disables passing of the server name through <a href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\">TLS Server Name Indication extension</a> (SNI, RFC 6066) when establishing a connection with the proxied HTTPS server.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_server_name</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_server_name off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>"],
[4,"proxy_ssl_session_reuse","Determines whether SSL sessions can be reused when working with the proxied server. If the errors “`SSL3_GET_FINISHED:digest check failed`” appear in the logs, try disabling session reuse.","<p>Determines whether SSL sessions can be reused when working with the proxied server. If the errors “<code>SSL3_GET_FINISHED:digest check failed</code>” appear in the logs, try disabling session reuse.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_session_reuse</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_session_reuse on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_ssl_trusted_certificate","Specifies a `file` with trusted CA certificates in the PEM format used to [verify](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify) the certificate of the proxied HTTPS server.","<p>Specifies a <code>file</code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify\">verify</a> the certificate of the proxied HTTPS server.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_trusted_certificate</strong> <code>file</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>"],
[4,"proxy_ssl_verify","Enables or disables verification of the proxied HTTPS server certificate.","<p>Enables or disables verification of the proxied HTTPS server certificate.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_verify</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_verify off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>"],
[4,"proxy_ssl_verify_depth","Sets the verification depth in the proxied HTTPS server certificates chain.","<p>Sets the verification depth in the proxied HTTPS server certificates chain.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_verify_depth</strong> <code>number</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_verify_depth 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>"],
[4,"proxy_store","Enables saving of files to a disk. The `on` parameter saves files with paths corresponding to the directives [alias](https://nginx.org/en/docs/http/ngx_http_core_module.html#alias) or [root](https://nginx.org/en/docs/http/ngx_http_core_module.html#root). The `off` parameter disables saving of files. In addition, the file name can be set explicitly using the `string` with variables:","<p>Enables saving of files to a disk. The <code>on</code> parameter saves files with paths corresponding to the directives <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\">alias</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\">root</a>. The <code>off</code> parameter disables saving of files. In addition, the file name can be set explicitly using the <code>string</code> with variables:</p><blockquote class=\"example\"><pre>proxy_store /data/www$original_uri;\n</pre></blockquote><p>The modification time of files is set according to the received “Last-Modified” response header field. The response is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the persistent store can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both saved files and a directory holding temporary files, set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_path\">proxy_temp_path</a> directive, are put on the same file system.</p><p>This directive can be used to create local copies of static unchangeable files, e.g.:</p><blockquote class=\"example\"><pre>location /images/ {\n    root               /data/www;\n    error_page         404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    proxy_pass         http://backend/;\n    proxy_store        on;\n    proxy_store_access user:rw group:rw all:r;\n    proxy_temp_path    /data/temp;\n\n    alias              /data/www/;\n}\n</pre></blockquote><p>or like this:</p><blockquote class=\"example\"><pre>location /images/ {\n    root               /data/www;\n    error_page         404 = @fetch;\n}\n\nlocation @fetch {\n    internal;\n\n    proxy_pass         http://backend;\n    proxy_store        on;\n    proxy_store_access user:rw group:rw all:r;\n    proxy_temp_path    /data/temp;\n\n    root               /data/www;\n}\n</pre></blockquote>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_store</strong> <code>on</code> | <code>off</code> | <code>string</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_store off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_store_access","Sets access permissions for newly created files and directories, e.g.:","<p>Sets access permissions for newly created files and directories, e.g.:</p><blockquote class=\"example\"><pre>proxy_store_access user:rw group:rw all:r;\n</pre></blockquote><p>If any <code>group</code> or <code>all</code> access permissions are specified then <code>user</code> permissions may be omitted:</p><blockquote class=\"example\"><pre>proxy_store_access group:rw all:r;\n</pre></blockquote>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_store_access</strong> <code>users</code>:<code>permissions</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_store_access user:rw;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_temp_file_write_size","Limits the `size` of data written to a temporary file at a time, when buffering of responses from the proxied server to temporary files is enabled. By default, `size` is limited by two buffers set by the [proxy\\_buffer\\_size](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size) and [proxy\\_buffers](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers) directives. The maximum size of a temporary file is set by the [proxy\\_max\\_temp\\_file\\_size](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_max_temp_file_size) directive.","<p>Limits the <code>size</code> of data written to a temporary file at a time, when buffering of responses from the proxied server to temporary files is enabled. By default, <code>size</code> is limited by two buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers\">proxy_buffers</a> directives. The maximum size of a temporary file is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_max_temp_file_size\">proxy_max_temp_file_size</a> directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_temp_file_write_size</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_temp_file_write_size 8k|16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[4,"proxy_temp_path","Defines a directory for storing temporary files with data received from proxied servers. Up to three-level subdirectory hierarchy can be used underneath the specified directory. For example, in the following configuration","<p>Defines a directory for storing temporary files with data received from proxied servers. Up to three-level subdirectory hierarchy can be used underneath the specified directory. For example, in the following configuration</p><blockquote class=\"example\"><pre>proxy_temp_path /spool/nginx/proxy_temp 1 2;\n</pre></blockquote><p>a temporary file might look like this:</p><blockquote class=\"example\"><pre>/spool/nginx/proxy_temp/<strong>7</strong>/<strong>45</strong>/00000123<strong>457</strong>\n</pre></blockquote><p>See also the <code>use_temp_path</code> parameter of the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path\">proxy_cache_path</a> directive.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_temp_path</strong> <code>path</code> [<code>level1</code> [<code>level2</code> [<code>level3</code>]]];</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_temp_path proxy_temp;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>"],
[5,"<p>The <code>ngx_http_proxy_module</code> module supports embedded variables that can be used to compose headers using the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\">proxy_set_header</a> directive:</p><dl class=\"compact\"><dt id=\"var_proxy_host\"><code>$proxy_host</code></dt><dd>name and port of a proxied server as specified in the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\">proxy_pass</a> directive;</dd><dt id=\"var_proxy_port\"><code>$proxy_port</code></dt><dd>port of a proxied server as specified in the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\">proxy_pass</a> directive, or the protocol’s default port;</dd><dt id=\"var_proxy_add_x_forwarded_for\"><code>$proxy_add_x_forwarded_for</code></dt><dd>the “X-Forwarded-For” client request header field with the <code>$remote_addr</code> variable appended to it, separated by a comma. If the “X-Forwarded-For” field is not present in the client request header, the <code>$proxy_add_x_forwarded_for</code> variable is equal to the <code>$remote_addr</code> variable.</dd></dl>"]
]