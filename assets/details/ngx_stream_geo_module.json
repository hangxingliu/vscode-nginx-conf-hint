[
[4,"geo","Describes the dependency of values of the specified variable on the client IP address. By default, the address is taken from the `$remote_addr` variable, but it can also be taken from another variable, for example:","<p>Describes the dependency of values of the specified variable on the client IP address. By default, the address is taken from the <code>$remote_addr</code> variable, but it can also be taken from another variable, for example:</p><blockquote class=\"example\"><pre>geo $arg_remote_addr $geo {\n    ...;\n}\n</pre></blockquote><blockquote class=\"note\">Since variables are evaluated only when used, the mere existence of even a large number of declared “<code>geo</code>” variables does not cause any extra costs for connection processing.</blockquote><p>If the value of a variable does not represent a valid IP address then the “<code>255.255.255.255</code>” address is used.</p><p>Addresses are specified either as prefixes in CIDR notation (including individual addresses) or as ranges.</p><p>The following special parameters are also supported:</p><dl class=\"compact\"><dt><code>delete</code></dt><dd>deletes the specified network.</dd><dt><code>default</code></dt><dd>a value set to the variable if the client address does not match any of the specified addresses. When addresses are specified in CIDR notation, “<code>0.0.0.0/0</code>” and “<code>::/0</code>” can be used instead of <code>default</code>. When <code>default</code> is not specified, the default value will be an empty string.</dd><dt><code>include</code></dt><dd>includes a file with addresses and values. There can be several inclusions.</dd><dt><code>ranges</code></dt><dd>indicates that addresses are specified as ranges. This parameter should be the first. To speed up loading of a geo base, addresses should be put in ascending order.</dd></dl><p>Example:</p><blockquote class=\"example\"><pre>geo $country {\n    default        ZZ;\n    include        conf/geo.conf;\n    delete         127.0.0.0/16;\n\n    127.0.0.0/24   US;\n    127.0.0.1/32   RU;\n    10.1.0.0/16    RU;\n    192.168.1.0/24 UK;\n}\n</pre></blockquote><p>The <code>conf/geo.conf</code> file could contain the following lines:</p><blockquote class=\"example\"><pre>10.2.0.0/16    RU;\n192.168.2.0/24 RU;\n</pre></blockquote><p>A value of the most specific match is used. For example, for the 127.0.0.1 address the value “<code>RU</code>” will be chosen, not “<code>US</code>”.</p><p>Example with ranges:</p><blockquote class=\"example\"><pre>geo $country {\n    ranges;\n    default                   ZZ;\n    127.0.0.0-127.0.0.0       US;\n    127.0.0.1-127.0.0.1       RU;\n    127.0.0.1-127.0.0.255     US;\n    10.1.0.0-10.1.255.255     RU;\n    192.168.1.0-192.168.1.255 UK;\n}\n</pre></blockquote>",["Since variables are evaluated only when used, the mere existence of even a large number of declared “`geo`” variables does not cause any extra costs for connection processing."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>geo</strong> [<code>$address</code>] <code>$variable</code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>"]
]