[
[4,"charset","Adds the specified charset to the “Content-Type” response header field. If this charset is different from the charset specified in the [source\\_charset](https://nginx.org/en/docs/http/ngx_http_charset_module.html#source_charset) directive, a conversion is performed.","<p>Adds the specified charset to the “Content-Type” response header field. If this charset is different from the charset specified in the <a href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#source_charset\">source_charset</a> directive, a conversion is performed.</p><p>The parameter <code>off</code> cancels the addition of charset to the “Content-Type” response header field.</p><p>A charset can be defined with a variable:</p><blockquote class=\"example\"><pre>charset $charset;\n</pre></blockquote><p>In such a case, all possible values of a variable need to be present in the configuration at least once in the form of the <a href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset_map\">charset_map</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset\">charset</a>, or <a href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#source_charset\">source_charset</a> directives. For <code>utf-8</code>, <code>windows-1251</code>, and <code>koi8-r</code> charsets, it is sufficient to include the files <code>conf/koi-win</code>, <code>conf/koi-utf</code>, and <code>conf/win-utf</code> into configuration. For other charsets, simply making a fictitious conversion table works, for example:</p><blockquote class=\"example\"><pre>charset_map iso-8859-5 _ { }\n</pre></blockquote><p>In addition, a charset can be set in the “X-Accel-Charset” response header field. This capability can be disabled using the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers\">proxy_ignore_headers</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers\">fastcgi_ignore_headers</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers\">uwsgi_ignore_headers</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_ignore_headers\">scgi_ignore_headers</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ignore_headers\">grpc_ignore_headers</a> directives.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>charset</strong> <code>charset</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>charset off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>"],
[4,"charset_map","Describes the conversion table from one charset to another. A reverse conversion table is built using the same data. Character codes are given in hexadecimal. Missing characters in the range 80-FF are replaced with “`?`”. When converting from UTF-8, characters missing in a one-byte charset are replaced with “`&#XXXX;`”.","<p>Describes the conversion table from one charset to another. A reverse conversion table is built using the same data. Character codes are given in hexadecimal. Missing characters in the range 80-FF are replaced with “<code>?</code>”. When converting from UTF-8, characters missing in a one-byte charset are replaced with “<code>&amp;#XXXX;</code>”.</p><p>Example:</p><blockquote class=\"example\"><pre>charset_map koi8-r windows-1251 {\n    C0 FE ; # small yu\n    C1 E0 ; # small a\n    C2 E1 ; # small b\n    C3 F6 ; # small ts\n    ...\n}\n</pre></blockquote><p>When describing a conversion table to UTF-8, codes for the UTF-8 charset should be given in the second column, for example:</p><blockquote class=\"example\"><pre>charset_map koi8-r utf-8 {\n    C0 D18E ; # small yu\n    C1 D0B0 ; # small a\n    C2 D0B1 ; # small b\n    C3 D186 ; # small ts\n    ...\n}\n</pre></blockquote><p>Full conversion tables from <code>koi8-r</code> to <code>windows-1251</code>, and from <code>koi8-r</code> and <code>windows-1251</code> to <code>utf-8</code> are provided in the distribution files <code>conf/koi-win</code>, <code>conf/koi-utf</code>, and <code>conf/win-utf</code>.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>charset_map</strong> <code>charset1</code> <code>charset2</code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>"],
[4,"charset_types","Enables module processing in responses with the specified MIME types in addition to “`text/html`”. The special value “`*`” matches any MIME type (0.8.29).","<p>Enables module processing in responses with the specified MIME types in addition to “<code>text/html</code>”. The special value “<code>*</code>” matches any MIME type (0.8.29).</p><blockquote class=\"note\">Until version 1.5.4, “<code>application/x-javascript</code>” was used as the default MIME type instead of “<code>application/javascript</code>”.</blockquote>",["Until version 1.5.4, “`application/x-javascript`” was used as the default MIME type instead of “`application/javascript`”."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>charset_types</strong> <code>mime-type</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>charset_types text/html text/xml text/plain text/vnd.wap.wml\napplication/javascript application/rss+xml;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.9.</p>"],
[4,"override_charset","Determines whether a conversion should be performed for answers received from a proxied or a FastCGI/uwsgi/SCGI/gRPC server when the answers already carry a charset in the “Content-Type” response header field. If conversion is enabled, a charset specified in the received response is used as a source charset.","<p>Determines whether a conversion should be performed for answers received from a proxied or a FastCGI/uwsgi/SCGI/gRPC server when the answers already carry a charset in the “Content-Type” response header field. If conversion is enabled, a charset specified in the received response is used as a source charset.</p><blockquote class=\"note\">It should be noted that if a response is received in a subrequest then the conversion from the response charset to the main request charset is always performed, regardless of the <code>override_charset</code> directive setting.</blockquote>",["It should be noted that if a response is received in a subrequest then the conversion from the response charset to the main request charset is always performed, regardless of the `override_charset` directive setting."],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>override_charset</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>override_charset off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>"],
[4,"source_charset","Defines the source charset of a response. If this charset is different from the charset specified in the [charset](https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset) directive, a conversion is performed.","<p>Defines the source charset of a response. If this charset is different from the charset specified in the <a href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset\">charset</a> directive, a conversion is performed.</p>",[],"<table ><tbody><tr><th>Syntax:</th><td><code><strong>source_charset</strong> <code>charset</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>"]
]